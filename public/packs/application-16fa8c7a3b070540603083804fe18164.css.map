{"version":3,"file":"application-16fa8c7a3b070540603083804fe18164.css","sources":["webpack:///./frontend/init/index.css","webpack:///./node_modules/normalize.css/normalize.css","webpack:///./frontend/init/variables.css","webpack:///./frontend/init/recruitment-info.css","webpack:///./frontend/init/tables.css","webpack:///./frontend/init/tooltip.css","webpack:///./frontend/components/frontend/components/recruitment-form.vue","webpack:///./frontend/components/shared/frontend/components/shared/loading-screen.vue","webpack:///./frontend/components/shared/frontend/components/shared/locale-switcher.vue","webpack:///./frontend/components/shared/form-fields/input/frontend/components/shared/form-fields/input/input-upload-single.vue","webpack:///./frontend/components/shared/form-fields/input/frontend/components/shared/form-fields/input/input-upload-multiple.vue","webpack:///./frontend/components/shared/form-fields/input/frontend/components/shared/form-fields/input/input-textarea.vue","webpack:///./frontend/components/shared/form-fields/input/frontend/components/shared/form-fields/input/input-checkbox.vue","webpack:///./frontend/components/shared/form-fields/input/frontend/components/shared/form-fields/input/input-radio.vue","webpack:///./frontend/components/recruitment-form/modals/frontend/components/recruitment-form/modals/recruitment-form-success.vue","webpack:///./frontend/components/shared/frontend/components/shared/modal.vue","webpack:///./frontend/components/recruitment-form/modals/frontend/components/recruitment-form/modals/recruitment-form-error.vue","webpack:///./frontend/components/recruitment-form/modals/frontend/components/recruitment-form/modals/confirm-submission.vue","webpack:///./frontend/components/shared/form-fields/display/frontend/components/shared/form-fields/display/display-textarea.vue","webpack:///./frontend/components/frontend/components/board.vue","webpack:///./frontend/components/boards/modals/frontend/components/boards/modals/person-info.vue","webpack:///./frontend/components/boards/modals/person-info/frontend/components/boards/modals/person-info/application-info-display.vue","webpack:///./frontend/components/boards/modals/person-info/frontend/components/boards/modals/person-info/application-info-edit.vue","webpack:///./frontend/components/boards/modals/person-info/frontend/components/boards/modals/person-info/comments-component.vue","webpack:///./frontend/components/boards/modals/person-info/frontend/components/boards/modals/person-info/comment-list-component.vue","webpack:///./frontend/components/boards/modals/person-info/frontend/components/boards/modals/person-info/keywords-component.vue","webpack:///./frontend/components/boards/modals/person-info/frontend/components/boards/modals/person-info/correspondence.vue","webpack:///./frontend/components/boards/modals/person-info/correspondence/frontend/components/boards/modals/person-info/correspondence/compose-email.vue","webpack:///./frontend/components/boards/modals/person-info/correspondence/frontend/components/boards/modals/person-info/correspondence/message-list.vue","webpack:///./frontend/components/boards/modals/person-info/correspondence/frontend/components/boards/modals/person-info/correspondence/flash-messages.vue","webpack:///./frontend/components/boards/modals/frontend/components/boards/modals/server-error.vue","webpack:///./frontend/components/boards/frontend/components/boards/phase.vue","webpack:///./frontend/components/boards/frontend/components/boards/person-card.vue","webpack:///./frontend/components/boards/frontend/components/boards/board-sidebar.vue","webpack:///./frontend/components/shared/frontend/components/shared/admin-nav.vue","webpack:///./frontend/components/shared/frontend/components/shared/filter-component.vue","webpack:///./frontend/components/shared/frontend/components/shared/csv-component.vue","webpack:///./frontend/components/boards/board-sidebar/frontend/components/boards/board-sidebar/drop-box.vue","webpack:///./frontend/components/boards/board-sidebar/frontend/components/boards/board-sidebar/logged-in-users.vue","webpack:///./frontend/components/frontend/components/profiles.vue","webpack:///./frontend/components/profiles/frontend/components/profiles/names-table.vue","webpack:///./frontend/components/profiles/frontend/components/profiles/static-field.vue","webpack:///./frontend/components/profiles/frontend/components/profiles/profiles-table.vue","webpack:///./frontend/components/profiles/frontend/components/profiles/field.vue","webpack:///./frontend/components/profiles/cells/frontend/components/profiles/cells/cell-textarea.vue","webpack:///./frontend/components/profiles/cells/frontend/components/profiles/cells/cell-checkbox.vue","webpack:///./frontend/components/profiles/frontend/components/profiles/profiles-sidebar.vue","webpack:///./frontend/components/profiles/modals/frontend/components/profiles/modals/new-profile.vue","webpack:///./frontend/components/frontend/components/timeline.vue","webpack:///./frontend/components/timeline/frontend/components/timeline/names-table.vue","webpack:///./frontend/components/timeline/frontend/components/timeline/timeline-table.vue","webpack:///./frontend/components/timeline/frontend/components/timeline/milestone-cell.vue","webpack:///./frontend/components/timeline/frontend/components/timeline/milestone-card.vue","webpack:///./frontend/components/timeline/modals/frontend/components/timeline/modals/profile-milestones.vue","webpack:///./frontend/components/timeline/modals/frontend/components/timeline/modals/milestones-form.vue","webpack:///./frontend/components/timeline/modals/frontend/components/timeline/modals/person-milestone-line.vue","webpack:///./frontend/components/timeline/modals/frontend/components/timeline/modals/graduate.vue"],"sourcesContent":["@import \"normalize.css\";\n@import \"./variables.css\";\n\n@import url('https://fonts.googleapis.com/css?family=Montserrat:400,400i,600,600i|Raleway:400,400i,700,700i|Open+Sans:400,400i,700,700i&subset=latin-ext');\n\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 16px;\n}\n\nhtml, body {\n  font-family: \"Montserrat\", Arial, Helvetica, sans-serif;\n  height: 100%;\n}\n\n.wrapper {\n  width: 100%;\n  margin: auto;\n  height: 100%;\n}\n\na {\n  text-decoration: none;\n  color: var(--navColor);\n  &:hover {\n    text-decoration: underline;\n  }\n  &:visited {\n    color: color(var(--navColor) shade(50%));\n  }\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n}\n\nbutton {\n  font-family: \"Raleway\", sans-serif;\n  font-weight: bold;\n  background-color: var(--navColor);\n  color: white;\n  padding: 15px;\n  border: none;\n  border-radius: 2px;\n  text-transform: uppercase;\n  font-size: 12px;\n  letter-spacing: 2px;\n  line-height: 20px;\n  cursor: pointer;\n  transition: color 300ms, background-color 300ms;\n\n  &:hover {\n    background-color: white;\n    color: var(--navColor);\n  }\n  &.remove {\n    background-color: color(var(--navColor) alpha(90%));\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 1.5em;\n    height: 1.5em;\n    padding: 2px;\n    padding-left: 4px;\n    margin-top: 5px;\n    line-height: 1.2em;\n    transition: none;\n    border-radius: 50%;\n    &:after {\n      content: \"x\";\n      font-size: .9em;\n    }\n    &:hover {\n      color: black;\n    }\n  }\n  &.submit {\n    margin: auto;\n    display: block;\n    border: 1px solid var(--navColor);\n    &.--disabled {\n      cursor: default;\n      border: 1px solid transparent;\n      background-color: var(--navColor)99;\n      color: white;\n    }\n    &.--disabled:hover {\n      background-color: var(--navColor)99;\n      color: white;\n    }\n  }\n  &.caution {\n    background-color: red;\n    border: 1px solid red;\n    &:hover {\n      color: red;\n      background-color: white;\n    }\n    &.--disabled {\n      cursor: default;\n      border: 1px solid transparent;\n      background-color: #ff000099;\n      color: white;\n    }\n    &.--disabled:hover {\n      background-color: #ff000099;\n      color: white;\n    }\n  }\n\n}\n\nli.nav-tab {\n  cursor: pointer;\n  display: inline-block;\n  padding: 5px;\n  margin: auto 2px;\n  background-color: color(var(--navColor) alpha(50%));\n  border-radius: 2px 2px 0 0;\n  border-bottom: 2px solid transparent;\n  font-weight: bold;\n  transition: background-color .5s ease;\n  &.--selected {\n    background-color: var(--navColor);\n    padding-top: 7px;\n    border-bottom: 2px solid black;\n  }\n}\n\n.field-row label, .field-row .field-label {\n  background-color: gray(200);\n  border-radius: 3px;\n  display: inline-block;\n  vertical-align: top;\n  font-weight: bold;\n  margin-right: 2em;\n  width: 12em;\n  padding: 2px 0;\n  padding-right: .5em;\n  text-align: right;\n}\n\ninput {\n  padding: .5em;\n}\n\ninput[type=\"file\"] {\n  color: transparent;\n}\n\nselect {\n  display: inline-block;\n  padding: .5em;\n  background-color: white;\n}\n\ninput, textarea, select, button.submit, .input, .file-list {\n  width: 25em;\n}\n\n.mandatory .label:after {\n  content: \"*\";\n  color: red;\n  margin-left: 2px;\n}\n\n.file-list {\n  list-style: none;\n  padding-left: 0;\n  margin: auto;\n  & .file-line {\n    position: relative;\n    display: flex;\n    height: 2em;\n    line-height: 2em;\n    margin-top: 3px;\n    & span {\n      margin-left: 2em;\n    }\n  }\n}\n\n.choice-group {\n  display: inline-block;\n  border: none;\n  & label {\n    margin: 5px 5px 0 15px;\n    display: inline-block;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/init/index.css","/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/normalize.css/normalize.css",":root {\n  /* global */\n  --themeColor: #00a668;\n  --textFamily: 'Open Sans', Arial, sans-serif;\n  --textColor: gray(20);\n  --windowHeight: 400;\n  --navColor: #4490ce;\n  --fieldsBoxShadow: -1px 1px 2px;\n  --paragraphColor: #767676;\n  --cardBg: #fafafa;\n  --navHeight: 8;\n  --headerColor: #292929;\n  --errorColor: #ff6a6a;\n\n  /* profiles and timeline */\n  --cellWidth: 15;\n  --cellHeight: 55;\n  --cellMinHeight: 40;\n  --cellMaxHeight: 62;\n  --cellPadding: 10;\n  --nameCellWidth: 12;\n  --profilesSidebarOffset: 16;\n  --menuSpace: 3;\n  --profilesSidebarWidth: calc(var(--profilesSidebarOffset)+var(--menuSpace));\n  --selectionBoxRatio: 0.55;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/init/variables.css","@import \"./variables.css\";\n\n.application-information {\n  margin: 15px 10%;\n  padding-bottom: 3em;\n  border-bottom: 1px solid black;\n  & h1 {\n    font-weight: 600;\n    color: var(--headerColor);\n    font-size: 18px;\n    line-height: 1;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n  }\n  & p {\n    font-size: .9em;\n    line-height: 1.7;\n    color: var(--paragraphColor);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/init/recruitment-info.css","@import \"./variables.css\";\n\n:root {\n  --currentColor: color(var(--themeColor) tint(50%));\n  --nameCellColor: color(var(--themeColor) tint(40%));\n  --selectHighlightColor: #00B2CAff;\n  --borderColor: #444444;\n  --rejectedColor: #f39d9d;\n  --finishedColor: #c3c7c6;\n  --incomingColor: #e2e264;\n}\n\n.tables {\n  position: relative;\n  display: flex;\n  flex-wrap: nowrap;\n  height: 100%;\n  overflow-x: hidden;\n}\n\n.table {\n\n  & .row {\n    display: flex;\n    &.--selected .cell, &.--selected .name-cell {\n      background-color: var(--selectHighlightColor);\n      &.--rejected, &.--finished, &.--incoming {\n        background-color: var(--selectHighlightColor);\n      }\n      &.--invalid {\n        background-color: var(--errorColor);\n      }\n    }\n  }\n\n  & .cell {\n    min-width: var(--cellWidth)em;\n    width: var(--cellWidth)em;\n    height: var(--cellHeight)px;\n\n    border-style: solid;\n    border-width: 1px 1px 0 0;\n    border-color: var(--borderColor);\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n\n    &.--invalid {\n      background-color: var(--errorColor);\n    }\n    &.--current {\n      background-color: var(--currentColor);\n    }\n    &.name-cell {\n      border: 1px solid white;\n    }\n    &.name-cell, &.status-cell {\n      background-color: var(--nameCellColor);\n      &.--invalid {\n        background-color: var(--errorColor);\n      }\n      &.--rejected {\n        background-color: var(--rejectedColor);\n      }\n      &.--finished {\n        background-color: var(--finishedColor);\n      }\n      &.--incoming {\n        background-color: var(--incomingColor);\n      }\n    }\n\n    &.status-cell .cell-display {\n      color: var(--textColor);\n    }\n  }\n\n  & .table-head {\n    position: fixed;\n    .cell {\n      min-height: var(--cellMinHeight)px;\n      margin: 0 auto;\n      text-align: center;\n      font-weight: bold;\n      background-color: white;\n      &.--current {\n        background-color: var(--currentColor);\n      }\n    }\n  }\n\n  & .table-body {\n    & .row:last-of-type {\n      & .cell {\n        border-bottom: 1px solid var(--borderColor);\n      }\n    }\n  }\n  & .row:first-of-type {\n    & .name-cell {\n      border-top: 1px solid var(--borderColor);\n    }\n  }\n\n  &.names-table {\n    position: absolute;\n    background-color: white;\n    z-index: 4;\n    & .table-head {\n      & .cell {\n        background-color: var(--nameCellColor);\n      }\n    }\n    & .cell.selection-box {\n      min-width: calc(var(--cellWidth)*var(--selectionBoxRatio))em; /*include to override another rule*/\n      max-width: calc(var(--cellWidth)*var(--selectionBoxRatio))em;\n      text-align: center;\n      & input {\n        width: auto;\n      }\n      & select {\n        width: 90%;\n        font-size: .8em;\n        border: none;\n      }\n    }\n  }\n}\n\n.dynamic-table {\n  overflow-x: scroll;\n  overflow-y: hidden;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/init/tables.css",".tooltip {\n  display: block;\n  z-index: 10000;\n\n  .tooltip-inner {\n    background: black;\n    color: white;\n    border-radius: 5px;\n    padding: 5px 10px 4px;\n    font-size: 14px;\n    max-width: 20em;\n  }\n\n  .tooltip-arrow {\n    width: 0;\n    height: 0;\n    border-style: solid;\n    position: absolute;\n    margin: 5px;\n    border-color: black;\n    z-index: 1;\n  }\n\n  &[x-placement^=\"top\"] {\n    margin-bottom: 5px;\n\n    .tooltip-arrow {\n      border-width: 5px 5px 0 5px;\n      border-left-color: transparent !important;\n      border-right-color: transparent !important;\n      border-bottom-color: transparent !important;\n      bottom: -5px;\n      left: calc(50% - 5px);\n      margin-top: 0;\n      margin-bottom: 0;\n    }\n  }\n\n  &[x-placement^=\"bottom\"] {\n    margin-top: 5px;\n\n    .tooltip-arrow {\n      border-width: 0 5px 5px 5px;\n      border-left-color: transparent !important;\n      border-right-color: transparent !important;\n      border-top-color: transparent !important;\n      top: -5px;\n      left: calc(50% - 5px);\n      margin-top: 0;\n      margin-bottom: 0;\n    }\n  }\n\n  &[x-placement^=\"right\"] {\n    margin-left: 5px;\n\n    .tooltip-arrow {\n      border-width: 5px 5px 5px 0;\n      border-left-color: transparent !important;\n      border-top-color: transparent !important;\n      border-bottom-color: transparent !important;\n      left: -5px;\n      top: calc(50% - 5px);\n      margin-left: 0;\n      margin-right: 0;\n    }\n  }\n\n  &[x-placement^=\"left\"] {\n    margin-right: 5px;\n\n    .tooltip-arrow {\n      border-width: 5px 0 5px 5px;\n      border-top-color: transparent !important;\n      border-right-color: transparent !important;\n      border-bottom-color: transparent !important;\n      right: -5px;\n      top: calc(50% - 5px);\n      margin-left: 0;\n      margin-right: 0;\n    }\n  }\n\n  &[aria-hidden='true'] {\n    visibility: hidden;\n    opacity: 0;\n    transition: opacity .15s, visibility .15s;\n  }\n\n  &[aria-hidden='false'] {\n    visibility: visible;\n    opacity: 1;\n    transition: opacity .15s;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/init/tooltip.css","<script>\nimport { mapGetters, mapActions } from \"vuex\"\nimport { omitBy, map } from \"lodash-es\"\n\nimport SceneMixin from 'mixins/scene-mixin.js'\nimport ModalMixin from 'mixins/modal-mixin.js'\n\nimport LocaleSwitcher from './shared/locale-switcher.vue'\n\nimport InputText from './shared/form-fields/input/input-text.vue'\nimport InputUploadSingle from './shared/form-fields/input/input-upload-single.vue'\nimport InputUploadMultiple from './shared/form-fields/input/input-upload-multiple.vue'\nimport InputTextarea from './shared/form-fields/input/input-textarea.vue'\nimport InputCheckbox from './shared/form-fields/input/input-checkbox.vue'\nimport InputRadio from './shared/form-fields/input/input-radio.vue'\nimport InputDate from './shared/form-fields/input/input-date.vue'\nimport InputSelect from './shared/form-fields/input/input-select.vue'\nimport InputMonth from './shared/form-fields/input/input-month.vue'\nimport InputSemester from './shared/form-fields/input/input-semester.vue'\n\nimport RecruitmentFormSuccessModal from './recruitment-form/modals/recruitment-form-success.vue'\nimport RecruitmentFormErrorModal from './recruitment-form/modals/recruitment-form-error.vue'\nimport ConfirmSubmissionModal from './recruitment-form/modals/confirm-submission.vue'\n\n  export default {\n    name: \"RecruitmentForm\",\n    mixins: [SceneMixin, ModalMixin],\n    data() {\n      return {\n        loadingApplication: false,\n        positionId: null,\n        applicationForm: null,\n        applicationSent: false,\n        formIsValid: false,\n        recruitmentFormInput: null,\n        translations: {\n          send: {en: \"Continue\", fr: \"Continuer\"},\n          back: {en: \"Back to the home page\", fr: \"Retour à l'accueil\"},\n        },\n      }\n    },\n    async created() {\n      await this.fetchInitialData()\n    },\n    computed: {\n      ...mapGetters(\"locales\", [\"currentLocale\"]),\n      ...mapGetters(\"positions\", [\"allPositions\", \"positionFormsById\"]),\n      ...mapGetters(\"recruitmentInfo\", [\"recruitmentInfo\", \"pageCopyright\", \"positionLabel\"]),\n      dataIsLoaded() {\n        return (this.recruitmentInfo && this.positionLabel && this.allPositions.length)\n      },\n      recruitmentFormFields() {\n        // excludes positions to avoid repetition\n        return omitBy(this.applicationForm.form, (field) => field.id === \"position_id\")\n      },\n    },\n    methods: {\n      ...mapActions(\"positions\", [\"getAllPositions\", \"getPositionForm\"]),\n      ...mapActions(\"recruitmentInfo\", [\"getRecruitmentInfo\"]),\n      ...mapActions(\"application\", [\"sendApplication\"]),\n      async fetchInitialData() {\n        try {\n          await this.getRecruitmentInfo()\n          await this.getAllPositions()\n        } catch (err) {\n          this.openModal(\"recruitment-form-error\")\n        }\n      },\n      async fetchAllData() {\n        await this.fetchInitialData()\n        if (this.dataIsLoaded) {\n          await this.generatePositionForm()\n        }\n      },\n      calculateFormIsValid() {\n        const fieldsValid = this.$refs.field.every((field) => field.isValid)\n        this.formIsValid = this.positionId && fieldsValid\n      },\n      async generatePositionForm() {\n        if (!this.positionId) {\n          this.applicationForm = null\n        } else {\n          this.loadingApplication = true\n          await this.getPositionForm(this.positionId)\n          this.applicationForm = this.positionFormsById[this.positionId]\n          this.loadingApplication = false\n        }\n      },\n      showConfirmationModal() {\n        if (!this.formIsValid || this.loading) return\n        const positions = map(this.allPositions, (p) => ({id: p.id, label: p.title }))\n        this.recruitmentFormInput = [\n            {\n              value: this.positionId, inputName: \"input_select_position_id\",\n              fieldType: \"select\", label: \"Position\", fieldId: \"position_id\",\n              options: {choices: positions}\n            },\n            ...this.$refs.field\n          ]\n        this.openModal(\"confirm-submission\")\n      },\n      async submitApplication() {\n        if (!this.formIsValid || this.loading) return\n        this.closeModal()\n        this.loading = true\n        try {\n          await this.sendApplication([...this.$refs.field,\n            {value: this.positionId, inputName: \"input_select_position_id\"}])\n            this.applicationSent = true\n          this.openModal(\"recruitment-form-success\")\n        } catch(err) {\n          this.openModal(\"recruitment-form-error\")\n        }\n        this.applicationForm = null\n        this.loading = false\n      },\n    },\n    components: {\n      LocaleSwitcher,\n      InputText,\n      InputUploadSingle,\n      InputUploadMultiple,\n      InputCheckbox,\n      InputRadio,\n      InputDate,\n      InputSelect,\n      InputTextarea,\n      InputMonth,\n      InputSemester,\n      RecruitmentFormSuccessModal,\n      RecruitmentFormErrorModal,\n      ConfirmSubmissionModal\n    },\n  }\n  </script>\n\n  <template lang=\"pug\">\n    div.recruitment-form-container\n      div.recruitment-form(v-if=\"loaded\")\n        loading-screen(v-if=\"loading\")\n\n        recruitment-form-success-modal(v-if=\"modalVisible && modalName === 'recruitment-form-success'\", @close=\"closeModal\")\n        recruitment-form-error-modal(v-if=\"modalVisible && modalName === 'recruitment-form-error'\", @close=\"closeModal\")\n        confirm-submission-modal(v-if=\"modalVisible && modalName === 'confirm-submission'\", @close=\"closeModal\", :recruitment-form-input=\"recruitmentFormInput\", @confirm=\"submitApplication\")\n\n        nav\n          a.logo-link(href=\"http://cerc-datascience.polymtl.ca/\", target=\"_blank\")\n            img.logo(src=\"../static/images/DSDMlogo_Full.png\")\n          locale-switcher.locale-switcher(@switch=\"fetchAllData\")\n\n        div.application-form-container(v-if=\"dataIsLoaded\")\n\n          div.application-information\n            div(v-html=\"recruitmentInfo\")\n\n          div.application-form\n            form(enctype=\"multipart/form-data\")\n\n            div(v-if=\"!applicationSent\")\n              div.position-select.mandatory\n                div.form-row\n                  label.label {{positionLabel}}\n                  select(v-model=\"positionId\", @change=\"generatePositionForm\")\n                    option(:value=\"null\") --\n                    option(v-for=\"position in allPositions\", :value=\"position.id\") {{position.title}}\n\n              transition(name=\"ease\")\n                div.position-fields(v-if=\"applicationForm && !loadingApplication\")\n                  component.form-row(\n                    ref=\"field\", v-for=\"field in recruitmentFormFields\",\n                    :is=\"field.type\", :label=\"field.label\", :options=\"field.options\",\n                    :field-id=\"field.id\", :field-type=\"field.type\", :class=\"{'mandatory': !field.options.optional}\",\n                    @input=\"calculateFormIsValid\"\n                  )\n                  div.form-row\n                    button.submit(type=\"button\", @click=\"showConfirmationModal\", :disabled=\"!formIsValid\", :class=\"{'--disabled': !formIsValid}\") {{translations[\"send\"][currentLocale]}}\n\n            div(v-else)\n              p.back-link\n                a(href=\"http://cerc-datascience.polymtl.ca/\") {{translations[\"back\"][currentLocale]}}\n\n      footer\n        div.copyright {{pageCopyright}}\n\n  </template>\n\n  <style>\n\n  @import \"../init/variables.css\";\n\n.recruitment-form-container {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  & footer {\n    margin: 0;\n    margin-top: 3em;\n    padding: 15px 0px;\n    background-color: black;\n    color: #828282;\n    width: 100%;\n    & .copyright {\n      font-size: .9em;\n      margin: 0 15px;\n      text-align: center;\n    }\n  }\n}\n\n.recruitment-form {\n\n  max-width: 960px;\n  margin: auto;\n\n  & nav {\n    z-index: 2;\n    position: fixed;\n    top: 0;\n    right: 0;\n    left: 0;\n    width: 100%;\n    height: var(--navHeight)em;\n    background-color: black;\n    padding: 10px;\n    display: flex;\n    justify-content: space-between;\n    & .logo-link {\n      display: inline-block;\n    }\n\n    & .logo {\n      height: calc(var(--navHeight) + 5)em;\n      margin: -3em;\n    }\n    & .locale-switcher {\n      float: right;\n      margin: 1.5em;\n    }\n  }\n\n  & .application-form-container {\n    margin-top: calc(var(--navHeight) + 2)em;\n  }\n\n  & .application-form {\n    transition: transform .5s;\n    width: 90%;\n    margin: auto;\n    padding-top: 20px;\n\n    & .label {\n      display: inline-block;\n      width: 30%;\n      margin-right: 10px;\n      vertical-align: top;\n      text-align: right;\n    }\n    & .position-select {\n      padding-bottom: 20px;\n    }\n    & .position-fields {\n      & .form-row {\n        margin: 10px auto;\n      }\n    }\n  }\n}\n\n.ease-enter-active, .ease-leave-active {\n  transition: all .5s ease-in;\n}\n\n.ease-enter, .ease-leave-to {\n  opacity: 0;\n  transform: translateY(100px);\n}\n\n.back-link {\n  text-align: center;\n}\n\n@media screen and (max-width: 400px) {\n\n  .recruitment-form .application-form  {\n    & .position-select, & .position-fields {\n      & .form-row {\n        display: flex;\n        flex-direction: column;\n        margin: 2em auto;\n        & label {\n          width: 100%;\n          text-align: left;\n          margin: auto;\n        }\n        & input, & textarea, & select, & button.submit, & .input, & .file-list {\n          width: 100%;\n        }\n      }\n    }\n  }\n\n\n\n\n  .recruitment-form nav {\n    display: flex;\n    align-items: center;\n    & .logo-link {\n      text-align: center;\n      & .logo {\n        height: calc(var(--navHeight) + 2)em;\n        margin: -2.5em;\n        margin-left: -3.5em;\n      }\n    }\n    & .locale-switcher {\n      margin: 0;\n      & button {\n        padding: .9em;\n      }\n    }\n  }\n}\n\n  </style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/frontend/components/recruitment-form.vue","<script>\n\nexport default {\n  name: \"LoadingScreen\",\n  data() {\n    return {\n    }\n  },\n}\n</script>\n\n<template lang=\"pug\">\n  div.loading\n    div.loading-backdrop\n    div.loading-content\n\n\n</template>\n\n<style>\n\n  .loading {\n    z-index: 200;\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & .loading-backdrop {\n      position: fixed;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      background-color: rgba(0, 0, 0, 0.3);\n    }\n\n    & .loading-content {\n      z-index: 201;\n      background: url(\"../../static/images/spinner.gif\") center center / 70% no-repeat white;\n      border-radius: 20px;\n      height: 200px;\n      width: 200px;\n      box-shadow: 0 0 20px 2px black;\n    }\n\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/shared/frontend/components/shared/loading-screen.vue","<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nexport default {\n  name: \"LocaleSwitcher\",\n  data() {\n    return {\n      localesByCode: {\n        en: {label: \"English\", opposite: \"fr\"},\n        fr: {label: \"Français\",  opposite: \"en\"}\n      }\n    }\n  },\n  computed: {\n    ...mapGetters('locales', [\"currentLocale\"]),\n    switcherLabel() {\n      const opposite = this.localesByCode[this.currentLocale].opposite\n      return this.localesByCode[opposite].label\n    }\n  },\n  methods: {\n    ...mapActions('locales', [\"switchLocale\"]),\n    async handleSwitchLocale() {\n      await this.switchLocale()\n      this.$emit(\"switch\")\n    }\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  span.locale-switcher\n    button(type=\"button\", @click=\"handleSwitchLocale\") {{switcherLabel}}\n</template>\n\n<style>\n\n  .locale-switcher {\n    display: inline-block;\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/shared/frontend/components/shared/locale-switcher.vue","<script>\nimport FormFieldMixin from \"../../../../mixins/form-field-mixin.js\"\n\nimport { mapGetters } from \"vuex\"\n\nexport default {\n  name: \"InputUploadSingle\",\n  mixins: [FormFieldMixin],\n  data() {\n    return {\n      invalidDataType: false,\n      translations: {\n        invalid: {en: \"Only PDF format is accepted\", fr: \"Seulement le format PDF est accepté\"}\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(\"locales\", [\"currentLocale\"]),\n    fieldData() {\n      if (this.value && this.value.constructor === Object) {\n        return this.value.name\n      }\n      return this.value\n    },\n    formatIsValid() {\n      return !this.value ||\n        this.value.constructor === Object ||\n        (this.value && this.value.type === \"application/pdf\")\n    },\n    isValid() {\n      if (!this.options.optional) {\n        return !!(this.value && this.formatIsValid)\n      } else {\n        return (this.value) ? this.formatIsValid : true\n      }\n    },\n  },\n  methods: {\n    onChange(files) {\n      if (!files.length) return\n      if (files[0].type !== \"application/pdf\") {\n        this.value = null\n        this.invalidDataType = true\n        return\n      }\n      this.invalidDataType = false\n      this.value = files[0]\n      this.$emit(\"input\")\n    },\n    removeFile() {\n      this.value = null\n      this.$emit(\"input\")\n    },\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.input-upload-single\n    label.label {{label}}\n      span (pdf)\n    input(type=\"file\", accept=\".pdf\", @change=\"onChange($event.target.files)\")\n    p.invalid-msg(v-if=\"invalidDataType\") {{translations.invalid[currentLocale]}}\n    p.file-list(v-if=\"fieldData\")\n      span.file-line\n        span {{value.name | truncate(30)}}\n        button.remove(type=\"button\", @click=\"removeFile\")\n</template>\n\n<style>\n\n.input-upload-single {\n  & label span {\n    font-size: .8em;\n    margin-left: 3px;\n  }\n\n  & .invalid-msg {\n    font-size: .8em;\n    color: red;\n    text-align: center;\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/shared/form-fields/input/frontend/components/shared/form-fields/input/input-upload-single.vue","<script>\nimport FormFieldMixin from \"../../../../mixins/form-field-mixin.js\"\n\nimport { find, difference, filter, every, some } from \"lodash-es\"\n\nimport { mapGetters } from \"vuex\"\n\nexport default {\n  name: \"InputUploadMultiple\",\n  mixins: [FormFieldMixin],\n  data() {\n    return {\n      value: [],\n      invalidDataType: false,\n      translations: {\n        invalid: {en: \"Only PDF format is accepted\", fr: \"Seulement le format PDF est accepté\"}\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(\"locales\", [\"currentLocale\"]),\n    fieldData() {\n      return this.value.map((val) => {\n        if (val.constructor === Object) {\n          return val.name\n        }\n        return val\n      })\n    },\n    formatIsValid() {\n      return !this.value.length ||\n        every(this.value, (val) => {\n          return val.constructor === Object ||\n            val.type === \"application/pdf\"\n        })\n    },\n    isValid() {\n      if (!this.options.optional) {\n        return !!(this.value.length && this.formatIsValid)\n      } else {\n        return (this.value.length) ? this.formatIsValid : true\n      }\n    },\n  },\n  methods: {\n    onChange(files) {\n      this.$emit(\"input\")\n      if (!files.length) return\n      if (some(files, (file) => file.type !== \"application/pdf\")) {\n        this.invalidDataType = true\n        return\n      }\n      this.invalidDataType = false\n      const that = this\n      Array.from(Array(files.length).keys()).map((index) => {\n        if (!find(that.value, (file) =>  file.name === files[index].name)) {\n          that.value.push(files[index])\n        }\n      })\n      this.$emit(\"input\")\n    },\n    removeFile(file) {\n      this.value = difference(this.value, [file])\n      this.$emit(\"input\")\n    },\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.input-upload-multiple\n    label.label {{label}}\n      span (pdf)\n    input(type=\"file\", accept=\".pdf\", multiple, @change=\"onChange($event.target.files)\")\n    p.invalid-msg(v-if=\"invalidDataType\") {{translations.invalid[currentLocale]}}\n    ul.file-list\n      li.file-line(v-for=\"file in value\")\n        span {{file.name | truncate(30)}}\n        button.remove(type=\"button\", @click=\"removeFile(file)\")\n</template>\n\n<style>\n\n  .input-upload-multiple {\n    & label span {\n      font-size: .8em;\n      margin-left: 3px;\n    }\n\n    & .invalid-msg {\n      font-size: .8em;\n      color: red;\n      text-align: center;\n    }\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/shared/form-fields/input/frontend/components/shared/form-fields/input/input-upload-multiple.vue","<script>\nimport FormFieldMixin from \"../../../../mixins/form-field-mixin.js\"\n\nexport default {\n  name: \"InputTextarea\",\n  mixins: [FormFieldMixin],\n}\n</script>\n\n<template lang=\"pug\">\n  div.input-textarea\n    label.label {{label}}\n    textarea(v-model=\"value\", @change=\"onInput\")\n</template>\n\n<style>\n\n  @import \"../../../../init/variables.css\";\n\n  .input-textarea textarea {\n    font-family: var(--textFamily);\n    font-size: .9em;\n    line-height: 1.3em;\n    min-height: 10em;\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/shared/form-fields/input/frontend/components/shared/form-fields/input/input-textarea.vue","<script>\nimport FormFieldMixin from \"../../../../mixins/form-field-mixin.js\"\n\nexport default {\n  name: \"InputCheckbox\",\n  mixins: [FormFieldMixin],\n  props: {\n    options: {\n      type: Object,\n      default: function () {\n        return { choices: [] }\n      }\n    }\n  },\n  data() {\n    return {\n      value: []\n    }\n  },\n  computed: {\n    isValid() {\n      if (!this.options.optional) {\n        return !!this.value.length\n      }\n      return true\n    }\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.input-checkbox\n    label.label {{label}}\n    fieldset.choice-group\n      span.input(v-for=\"choice in options.choices\")\n        input(type=\"checkbox\", :value=\"choice.id\", v-model=\"value\", @change=\"onInput\")\n        label {{choice.label}}\n</template>\n\n<style>\n\n.input-checkbox {\n  & .input {\n    display: flex;\n    & label {\n      width: 90%;\n    }\n    & input {\n      display: inline;\n      width: 1em;\n      margin-top: .5em;\n    }\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/shared/form-fields/input/frontend/components/shared/form-fields/input/input-checkbox.vue","<script>\nimport FormFieldMixin from \"../../../../mixins/form-field-mixin.js\"\n\nexport default {\n  name: \"InputRadio\",\n  mixins: [FormFieldMixin],\n  props: {\n    options: {\n      type: Object,\n      default: function () {\n        return { choices: [] }\n      }\n    }\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.input-radio\n    label.label {{label}}\n    fieldset.choice-group\n      span.input(v-for=\"choice in options.choices\")\n        input(type=\"radio\", :value=\"choice.id\", v-model=\"value\", @change=\"onInput\")\n        label.radio {{choice.label}}\n</template>\n\n<style>\n\n.input-radio {\n  & .input {\n    display: flex;\n    & label {\n      width: 90%;\n    }\n    & input {\n      display: inline;\n      width: 1em;\n      margin-top: .5em;\n    }\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/shared/form-fields/input/frontend/components/shared/form-fields/input/input-radio.vue","<script>\n\nimport { mapGetters } from \"vuex\"\n\nimport Modal from \"../../shared/modal.vue\"\n\nexport default {\n  name: \"RecruitmentFormSuccess\",\n  computed: {\n    ...mapGetters(\"locales\", [\"currentLocale\"]),\n  },\n  methods: {\n    closeModal() {\n      this.$emit(\"close\")\n    }\n  },\n  components: {\n    Modal,\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  modal.success-message(@close=\"closeModal\")\n    h1.success-message-header(slot=\"header\")\n      span(v-if=\"currentLocale === 'en'\") Thank you!\n      span(v-if=\"currentLocale === 'fr'\") Merci !\n    div.success-message-body(slot=\"body\")\n      div(v-if=\"currentLocale === 'en'\")\n        p Your application has been successfully submitted.\n        p You will be hearing from us soon.\n        p\n          a(href=\"http://cerc-datascience.polymtl.ca/\") Back to the home page\n      div(v-if=\"currentLocale === 'fr'\")\n        p Votre application a été envoyée avec succès.\n        p Nous vous contacterons sous peu.\n        p\n          a(href=\"http://cerc-datascience.polymtl.ca/\") Retour à l'accueil\n\n\n\n\n</template>\n\n<style>\n\n  @import \"../../../init/variables.css\";\n\n  .success-message {\n    min-height: 300px;\n    max-height: 500px;\n    overflow: auto;\n    text-align: center;\n\n    & .success-message-body {\n      color: var(--paragraphColor);\n      width: 70%;\n      max-width: 600px;\n      margin: auto;\n      padding: 1em;\n      font-size: 1.1em;\n      border-radius: 5px;\n    }\n  }\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/recruitment-form/modals/frontend/components/recruitment-form/modals/recruitment-form-success.vue","<script>\n\nimport { FadeTransition } from 'vue2-transitions'\n\nexport default {\n  name: \"Modal\",\n  data() {\n    return {\n    }\n  },\n  computed: {\n  },\n  methods: {\n    close() {\n      this.$emit(\"close\")\n    }\n  },\n  components: {\n    FadeTransition\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  fade-transition\n    div.modal\n      div.modal-backdrop(@click=\"close\")\n      div.modal-content\n        header.modal-header\n          span.modal-title\n            slot(name=\"header\")\n          button.btn-close(type=\"button\", @click=\"close\")\n        div.modal-body\n          slot(name=\"body\")\n\n</template>\n\n<style>\n\n@import \"../../init/variables.css\";\n\n  .modal {\n    z-index: 200;\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & .modal-backdrop {\n      position: fixed;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      background-color: rgba(0, 0, 0, 0.3);\n    }\n\n    & .modal-content {\n      z-index: 201;\n      background: white;\n      min-width: 200px;\n      min-height: 400px;\n      width: 80%;\n      max-width: 900px;\n      box-shadow: 2px 2px 20px 1px;\n      border-radius: 2px;\n      overflow-x: auto;\n      display: flex;\n      flex-direction: column;\n    }\n\n    & .modal-header {\n      position: relative;\n      color: var(--headerColor);\n      padding: 5px 10px;\n    }\n\n    & .modal-body {\n      position: relative;\n    }\n\n    & .modal-title {\n      width: 90%;\n      display: inline-block;\n      padding: 0 15px;\n    }\n\n    & .btn-close {\n      position: absolute;\n      right: 0;\n      top: 0;\n      width: 3em;\n      height: 3em;\n      cursor: pointer;\n      font-weight: bold;\n      background: url(\"../../static/icons/x-charcoal.svg\") center center no-repeat;\n      margin: 10px;\n    }\n\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/shared/frontend/components/shared/modal.vue","<script>\n\nimport { mapGetters } from \"vuex\"\n\nimport Modal from \"../../shared/modal.vue\"\n\nexport default {\n  name: \"RecruitmentFormError\",\n  computed: {\n    ...mapGetters(\"locales\", [\"currentLocale\"]),\n  },\n  methods: {\n    closeModal() {\n      this.$emit(\"close\")\n    }\n  },\n  components: {\n    Modal,\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  modal.error-message(@close=\"closeModal\")\n    h1.error-message-header(slot=\"header\")\n      span(v-if=\"currentLocale === 'en'\") We are sorry!\n      span(v-if=\"currentLocale === 'fr'\") Nous sommes désolés !\n    div.error-message-body(slot=\"body\")\n      div(v-if=\"currentLocale === 'en'\")\n        p There was an error when processing this action.\n        p Please try again later.\n        p\n          a(href=\"http://cerc-datascience.polymtl.ca/\") Back to the home page\n      div(v-if=\"currentLocale === 'fr'\")\n        p Il s'est produit une erreur durant l'exécution de cette action.\n        p Veuillez réessayer plus tard.\n        p\n          a(href=\"http://cerc-datascience.polymtl.ca/\") Retour à l'accueil\n\n\n\n\n</template>\n\n<style>\n\n  @import \"../../../init/variables.css\";\n\n  .error-message {\n    min-height: 300px;\n    max-height: 500px;\n    overflow: auto;\n    text-align: center;\n\n\n    & .error-message-body {\n    color: var(--paragraphColor);\n      width: 70%;\n      max-width: 600px;\n      margin: auto;\n      padding: 1em;\n      font-size: 1.1em;\n      border-radius: 5px;\n    }\n  }\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/recruitment-form/modals/frontend/components/recruitment-form/modals/recruitment-form-error.vue","<script>\n\nimport { mapGetters } from \"vuex\"\n\nimport { map } from \"lodash-es\"\n\nimport Modal from \"../../shared/modal.vue\"\n\nimport DisplayText from \"../../shared/form-fields/display/display-text.vue\"\nimport DisplayTextarea from \"../../shared/form-fields/display/display-textarea.vue\"\nimport DisplayDate from \"../../shared/form-fields/display/display-date.vue\"\nimport DisplayRadio from \"../../shared/form-fields/display/display-radio.vue\"\nimport DisplaySelect from \"../../shared/form-fields/display/display-select.vue\"\nimport DisplayMonth from \"../../shared/form-fields/display/display-month.vue\"\nimport DisplaySemester from \"../../shared/form-fields/display/display-semester.vue\"\nimport DisplayCheckbox from \"../../shared/form-fields/display/display-checkbox.vue\"\nimport DisplayUploadSingle from \"../../shared/form-fields/display/display-upload-single.vue\"\nimport DisplayUploadMultiple from \"../../shared/form-fields/display/display-upload-multiple.vue\"\n\nexport default {\n  name: \"ConfirmSubmission\",\n  props: {\n    recruitmentFormInput: {\n      required: true\n    },\n  },\n  data() {\n    return {\n      translations: {\n        title: {\n          en: \"Confirmation\", fr: \"Confirmation\"\n        },\n        subtitle: {en: \"Please review your information before submitting\",\n          fr: \"Veuillez vérifier votre information avant de la soumettre\"\n        },\n        confirm: {en: \"Send\", fr: \"Envoyer\"}\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(\"locales\", [\"currentLocale\"]),\n    ...mapGetters(\"recruitmentInfo\", [\"termsConditions\"]),\n    recruitmentFormFields() {\n      return map(this.recruitmentFormInput, (input) => {\n        const {fieldType, label, value, fieldId, options} = input\n        return {\n          type: fieldType.replace(/^input-/, \"\"),\n          label, value, fieldId, options\n        }\n      })\n    }\n  },\n  methods: {\n    closeModal() {\n      this.$emit(\"close\")\n    },\n    submitApplication() {\n      this.$emit(\"confirm\")\n    },\n  },\n  components: {\n    Modal,\n    DisplayText,\n    DisplayDate,\n    DisplayRadio,\n    DisplaySelect,\n    DisplayMonth,\n    DisplaySemester,\n    DisplayTextarea,\n    DisplayCheckbox,\n    DisplayUploadSingle,\n    DisplayUploadMultiple,\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  modal(@close=\"closeModal\")\n    template(slot=\"header\")\n      div.confirm-submission-heading\n        h1 {{translations.title[currentLocale]}}\n        h2 {{translations.subtitle[currentLocale]}}\n    template(slot=\"body\")\n      div.confirm-submission\n        component.field-row(v-for=\"field in recruitmentFormFields\", :is=\"`display-${field.type}`\", :field=\"field\", :options=\"field.options\")\n        p.field-row.terms-conditions(v-if=\"termsConditions\") {{termsConditions}}\n        button.submit(@click=\"submitApplication\") {{translations.confirm[currentLocale]}}\n\n</template>\n\n<style>\n\n\n  @import \"../../../init/variables.css\";\n\n\n  .confirm-submission-heading {\n    text-align: center;\n    & h2 {\n      font-size: 1.1em;\n    }\n  }\n\n  .confirm-submission {\n    min-height: 300px;\n    max-height: var(--windowHeight)px;\n    overflow: auto;\n    padding: 2em 2em;\n    width: 90%;\n    margin: auto;\n\n    & .field-row {\n      padding: .5em;\n      padding-top: 0;\n      margin: .5em;\n      display: flex;\n\n      & label {\n        display: inline-block;\n        vertical-align: top;\n        font-weight: bold;\n        width: 40%;\n        padding: 2px 0;\n        padding-right: 2em;\n        text-align: right;\n      }\n      & ul {\n        display: inline-block;\n        list-style: none;\n        padding: 0;\n        margin: 0;\n      }\n      & ul.file-list {\n        display: block;\n        margin: auto;\n      }\n      & a {\n        color: black;\n        &:hover {\n          text-decoration: none;\n        }\n      }\n      & .pdf-icon {\n        width: 32px;\n        height: 32px;\n        display: inline-block;\n        background: url(\"../../../static/icons/file-pdf.svg\") left bottom / 70% no-repeat;\n      }\n\n      &.display-textarea span {\n        width: 60%;\n        white-space: pre-wrap;\n      }\n    }\n\n    & .terms-conditions {\n      word-wrap: break-word;\n      width: 90%;\n      text-align: justify;\n      color: rgb(20, 20, 20);\n      font-size: .8em;\n      margin: auto;\n      border-top: 1px solid;\n      padding-top: 2em;\n      line-height: 1.4em;\n    }\n\n    & .submit {\n      margin-top: 3em;\n    }\n\n  }\n\n  @media screen and (max-width: 400px) {\n      .confirm-submission .field-row {\n        flex-direction: column;\n        & label {\n          width: 100%;\n          padding: 0;\n          text-align: left;\n        }\n        &.display-textarea span {\n          width: 100%;\n          overflow: auto;\n        }\n      }\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/recruitment-form/modals/frontend/components/recruitment-form/modals/confirm-submission.vue","<script>\n\nimport DisplayFieldMixin from \"../../../../mixins/display-field-mixin.js\"\n\nexport default {\n  name: \"DisplayTextarea\",\n  mixins: [DisplayFieldMixin],\n}\n</script>\n\n<template lang=\"pug\">\n  div.display-textarea\n    label {{field.label}}\n    span {{field.value}}\n\n</template>\n\n<style>\n\n@import \"../../../../init/variables.css\";\n\n  .display-textarea {\n    & span {\n      font-family: var(--textFamily);\n      font-size: .9em;\n      line-height: 1.3em;\n      display: inline-block;\n      width: 30em;\n    }\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/shared/form-fields/display/frontend/components/shared/form-fields/display/display-textarea.vue","  <script>\nimport SceneMixin from \"mixins/scene-mixin.js\"\nimport ModalMixin from \"mixins/modal-mixin.js\"\n\nimport { mapGetters, mapActions } from \"vuex\"\nimport { find, filter, includes } from \"lodash-es\"\n\nimport { getParticipantInfo, setCallback } from \"cable/board\"\n\nimport PersonInfoModal from \"./boards/modals/person-info.vue\"\nimport ServerErrorModal from \"./boards/modals/server-error.vue\"\n\nimport Phase from \"./boards/phase.vue\"\nimport BoardSidebar from \"./boards/board-sidebar.vue\"\n\n  export default {\n    name: \"Board\",\n    mixins: [SceneMixin, ModalMixin],\n    props: {\n      boardSlug: {\n        required: true\n      }\n    },\n    beforeCreate() {\n      setCallback((data) => {\n        if (!this.currentUser) return\n        if (data.users) {\n          this.setLoggedInUsers(data.users)\n        } else if (data.message) {\n          this.addStatusMessage(data.message)\n        } else if (data.refresh_phases) {\n          if (!includes(data.refresh_phases.board_ids, this.boardSlug)) return\n          try {\n            this.fetchBoard(this.boardSlug)\n          } catch(err) {\n            this.openModal(\"server-error\", {})\n          }\n        }\n      })\n    },\n    async created() {\n      try {\n        await this.fetchBoard(this.boardSlug)\n        await this.fetchUserInfo()\n        getParticipantInfo()\n      } catch (err) {\n        this.openModal(\"server-error\", {})\n      }\n    },\n    data() {\n      return {\n        person: null,\n        tab: null,\n      }\n    },\n    computed: {\n      ...mapGetters(\"users\", [\"currentUser\"]),\n      ...mapGetters(\"boards\", [\"currentBoard\", \"nonFinalPhases\"]),\n      isLoaded() {\n        return !!(this.loaded && this.currentBoard)\n      },\n    },\n    methods: {\n      ...mapActions(\"users\", [\"fetchUserInfo\", \"addStatusMessage\", \"setLoggedInUsers\"]),\n      ...mapActions(\"boards\", [\"fetchBoard\"]),\n      openModalByName(modalName, data) {\n        if (modalName === \"person-info\") {\n          this.person = data.person\n          this.tab = data.tab\n        }\n        this.openModal(modalName)\n      },\n    },\n    components: {\n      PersonInfoModal,\n      ServerErrorModal,\n      Phase,\n      BoardSidebar,\n    }\n  }\n  </script>\n\n  <template lang=\"pug\">\n    div.boards(v-if=\"isLoaded\")\n      person-info-modal(@close=\"closeModal\", v-if=\"modalVisible && modalName === 'person-info'\", :person=\"person\", :tab=\"tab\")\n      server-error-modal(@close=\"closeModal\", v-if=\"modalVisible && modalName === 'server-error'\")\n\n      div.phases-wrapper\n        div.phases(:style=\"{width: (nonFinalPhases.length * 320) + 'px'}\")\n          phase(v-for=\"phase in nonFinalPhases\", :phase=\"phase\", @modal=\"openModalByName\")\n      board-sidebar.sidebar(v-if=\"currentUser\", @modal=\"openModalByName\", :user=\"currentUser\")\n\n\n  </template>\n\n  <style>\n\n  body {\n    overflow-x: hidden;\n  }\n\n  .boards {\n    display: flex;\n    justify-content: space-between;\n    height: 100%;\n    width: 100%;\n  }\n\n  .phases-wrapper {\n    overflow-x: auto;\n    overflow-y: auto;\n    padding: 1em;\n    height: 100%;\n  }\n\n  .phases {\n    display: flex;\n    flex-wrap: nowrap;\n    transition: transform 1s;\n    height: 100%;\n    overflow-y: auto;\n  }\n\n  .phase {\n    height: 95%;\n  }\n\n  .sidebar {\n    width: 350px;\n  }\n\n  </style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/frontend/components/board.vue","<script>\n\nimport { mapGetters, mapActions } from \"vuex\"\n\nimport { sendStatusMessage } from \"cable/board\"\n\nimport { SlideYUpTransition } from 'vue2-transitions'\nimport Modal from \"../../shared/modal.vue\"\nimport ApplicationInfoDisplay from \"./person-info/application-info-display.vue\"\nimport ApplicationInfoEdit from \"./person-info/application-info-edit.vue\"\nimport CommentsComponent from \"./person-info/comments-component.vue\"\nimport Correspondence from \"./person-info/correspondence.vue\"\n\nexport default {\n  name: \"PersonInfo\",\n  props: {\n    person: {\n      required: true\n    },\n    tab: {},\n  },\n  data() {\n    return {\n      application: null,\n      applicationForm: null,\n      showError: false,\n      editing: false,\n      currentTab: this.tab || \"information\",\n      tabs: [\"information\", \"comments\", \"email\"],\n      emailSection: (this.tab === \"email\") ? \"new\" : null,\n    }\n  },\n  async created() {\n    try {\n      await this.getApplication()\n      await this.getPositionForm(this.application.position_id)\n      await this.getAllPositions()\n      this.applicationForm = this.positionFormsById[this.application.position_id]\n    } catch (err) {\n      this.showError = true\n    }\n  },\n  computed: {\n    ...mapGetters(\"positions\", [\"allPositions\", \"positionFormsById\"]),\n    ...mapGetters(\"boards\", [\"phasesById\"]),\n    isLoaded() {\n      return !!(this.person && this.application && this.applicationForm)\n    }\n  },\n  methods: {\n    ...mapActions(\"application\", [\"fetchApplication\"]),\n    ...mapActions(\"positions\", [\"getAllPositions\", \"getPositionForm\"]),\n    closeModal() {\n      this.$emit(\"close\")\n    },\n    getApplication() {\n      if (this.person.application_id) {\n        return this.fetchApplication(this.person.application_id).then(({data}) => {\n          this.application = data\n        }).catch((error) => {\n          this.showError = true\n        })\n      }\n    },\n    async onUpdateApplication(data) {\n      try {\n        this.broadcastToLoggedInUsers(\"application_change\")\n        await this.getApplication()\n        await this.getPositionForm(this.application.position_id)\n        this.applicationForm = this.positionFormsById[this.application.position_id]\n      } catch(err) {\n        showError = true\n      }\n      this.editing = false\n    },\n    broadcastToLoggedInUsers(type) {\n      const params = {applicant: this.person.full_name, phase: this.phasesById[this.person.phase_id].title}\n      sendStatusMessage(type, params)\n    }\n  },\n  components: {\n    Modal,\n    SlideYUpTransition,\n    ApplicationInfoDisplay,\n    ApplicationInfoEdit,\n    CommentsComponent,\n    Correspondence,\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  modal(@close=\"closeModal\")\n    template(slot=\"header\")\n      h1 {{person.full_name}}\n    template(slot=\"body\")\n      div(v-if=\"showError\", style=\"text-align: center;\")\n        p There was an error while fetching this applicant's information.\n\n      div.person-info(v-if=\"isLoaded\")\n\n        ul.nav-tabs\n          li.nav-tab(v-for=\"tab in tabs\", @click=\"currentTab = tab\", :class=\"{'--selected': currentTab === tab}\") {{tab | capitalize}}\n\n        div(v-show=\"currentTab === 'information'\")\n          div.action-menu\n            button.icon.pencil(type=\"button\", @click=\"editing = !editing\", v-tooltip=\"'Edit application information'\")\n          slide-y-up-transition\n            application-info-display(:application=\"application\", :person=\"person\", :application-form=\"applicationForm\", v-if=\"!editing\")\n          slide-y-up-transition\n            application-info-edit(:application=\"application\", :person=\"person\", :application-form=\"applicationForm\" v-if=\"editing\", @update=\"onUpdateApplication\", @error=\"showError = true\")\n\n        div.comments(v-show=\"currentTab === 'comments'\")\n          slide-y-up-transition\n            comments-component(:application=\"application\", @comment=\"broadcastToLoggedInUsers('comment')\")\n\n        div.correspondence(v-show=\"currentTab === 'email'\")\n          slide-y-up-transition\n            correspondence(:person=\"person\", :section=\"emailSection\", @email=\"broadcastToLoggedInUsers('email')\", @composing=\"broadcastToLoggedInUsers('composing')\")\n\n</template>\n\n<style>\n\n@import \"../../../init/variables.css\";\n\n  .person-info {\n    min-height: 300px;\n    max-height: var(--windowHeight)px;\n    overflow: auto;\n    padding: 2em 2em;\n    padding-top: 0;\n\n    & .action-menu {\n      width: 100%;\n      height: 32px;\n    }\n\n    & .icon {\n      height: 32px;\n      width: 32px;\n      display: inline-block;\n      margin-bottom: -3px;\n    }\n    & .pencil {\n      background: url(\"../../../static/icons/pencil-charcoal.svg\") bottom left / 90% no-repeat;\n      float: right;\n      &:hover {\n        background: url(\"../../../static/icons/pencil.svg\") bottom left / 100% no-repeat;\n      }\n    }\n    & .field-row {\n      padding: .5em;\n      padding-top: 0;\n      margin: .5em;\n\n      & ul {\n        display: inline-block;\n        list-style: none;\n        padding: 0;\n        margin: 0;\n      }\n      & ul.file-list {\n        display: block;\n        margin: auto;\n      }\n      & .pdf-icon {\n        background: url(\"../../../static/icons/file-pdf.svg\") left bottom / 70% no-repeat;\n      }\n    }\n\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/modals/frontend/components/boards/modals/person-info.vue","<script>\n\nimport { keyBy } from \"lodash-es\"\n\nimport DisplayText from \"../../../shared/form-fields/display/display-text.vue\"\nimport DisplayTextarea from \"../../../shared/form-fields/display/display-textarea.vue\"\nimport DisplayDate from \"../../../shared/form-fields/display/display-date.vue\"\nimport DisplayRadio from \"../../../shared/form-fields/display/display-radio.vue\"\nimport DisplaySelect from \"../../../shared/form-fields/display/display-select.vue\"\nimport DisplayMonth from \"../../../shared/form-fields/display/display-month.vue\"\nimport DisplaySemester from \"../../../shared/form-fields/display/display-semester.vue\"\nimport DisplayCheckbox from \"../../../shared/form-fields/display/display-checkbox.vue\"\nimport DisplayUploadSingle from \"../../../shared/form-fields/display/display-upload-single.vue\"\nimport DisplayUploadMultiple from \"../../../shared/form-fields/display/display-upload-multiple.vue\"\n\nexport default {\n  name: \"ApplicationInfoDisplay\",\n  props: {\n    person: {\n      required: true\n    },\n    application: {\n      required: true\n    },\n    applicationForm: {\n      required: true\n    }\n  },\n  data() {\n    return {\n    }\n  },\n  computed: {\n    applicationFormFieldsById() {\n      return keyBy(this.applicationForm.form, \"id\")\n    },\n  },\n  methods: {\n    getOptions(field) {\n      const value = this.applicationFormFieldsById[field.id]\n      return value && value.options\n    }\n  },\n  components: {\n    DisplayText,\n    DisplayDate,\n    DisplayRadio,\n    DisplaySelect,\n    DisplayMonth,\n    DisplaySemester,\n    DisplayTextarea,\n    DisplayCheckbox,\n    DisplayUploadSingle,\n    DisplayUploadMultiple,\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.application-info-display\n    div.display-fields\n      component.field-row(v-for=\"field in application.form_fields\", :is=\"`display-${field.type}`\", :field=\"field\", :options=\"getOptions(field)\")\n\n\n</template>\n\n<style>\n\n\n  .application-info-display {\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/modals/person-info/frontend/components/boards/modals/person-info/application-info-display.vue","<script>\n\nimport { mapActions } from \"vuex\"\nimport { keyBy } from \"lodash-es\"\n\nimport InputText from '../../../shared/form-fields/input/input-text.vue'\nimport InputUploadSingle from '../../../shared/form-fields/input/input-upload-single.vue'\nimport InputUploadMultiple from '../../../shared/form-fields/input/input-upload-multiple.vue'\nimport InputTextarea from '../../../shared/form-fields/input/input-textarea.vue'\nimport InputCheckbox from '../../../shared/form-fields/input/input-checkbox.vue'\nimport InputRadio from '../../../shared/form-fields/input/input-radio.vue'\nimport InputDate from '../../../shared/form-fields/input/input-date.vue'\nimport InputSelect from '../../../shared/form-fields/input/input-select.vue'\nimport InputMonth from '../../../shared/form-fields/input/input-month.vue'\nimport InputSemester from '../../../shared/form-fields/input/input-semester.vue'\n\nexport default {\n  name: \"ApplicationInfoEdit\",\n  props: {\n    person: {\n      required: true\n    },\n    application: {\n      required: true\n    },\n    applicationForm: {\n      required: true\n    }\n  },\n  data() {\n    return {\n      formIsValid: false,\n      loading: false,\n    }\n  },\n  mounted() {\n    this.calculateFormIsValid()\n  },\n  computed: {\n    formFieldsById() {\n      return keyBy(this.application.form_fields, \"id\")\n    }\n  },\n  methods: {\n    ...mapActions(\"application\", [\"updateApplication\"]),\n    calculateFormIsValid() {\n      const fieldsValid = this.$refs.field.every((field) => field.isValid)\n      this.formIsValid = this.application && fieldsValid\n    },\n    getSavedValue(field) {\n      const formField = this.formFieldsById[field.id]\n      if (formField) return formField.value\n    },\n    async saveApplication() {\n      if (!this.formIsValid || this.loading) return\n      this.loading = true\n      await this.updateApplication({applicationId: this.application.id,\n        values: this.$refs.field\n      }\n    ).then(({data}) => {\n        this.$emit(\"update\", data)\n      }).catch(() => {\n        this.$emit(\"error\")\n      })\n      this.loading = false\n    },\n  },\n  components: {\n    InputText,\n    InputDate,\n    InputRadio,\n    InputSelect,\n    InputMonth,\n    InputSemester,\n    InputTextarea,\n    InputCheckbox,\n    InputUploadSingle,\n    InputUploadMultiple,\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.application-info-display\n    div(v-if=\"applicationForm\")\n      component.field-row(\n        ref=\"field\", v-for=\"field in applicationForm.form\",\n        :is=\"field.type\", :label=\"field.label\", :options=\"field.options\",\n        :field-id=\"field.id\", :field-type=\"field.type\", :class=\"{'mandatory': !field.options.optional}\",\n        @input=\"calculateFormIsValid\", :saved-value=\"getSavedValue(field)\"\n      )\n      button.submit(type=\"button\", :disabled=\"!formIsValid\", @click=\"saveApplication\", :class=\"{'--disabled': !formIsValid}\") Save\n\n\n</template>\n\n<style>\n\n  .application-info-display {\n    & .choice-group label {\n      background-color: transparent;\n      text-align: left;\n      font-weight: normal;\n    }\n\n    & .file-list {\n      list-style: none;\n      padding-left: 0;\n      margin: auto;\n    }\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/modals/person-info/frontend/components/boards/modals/person-info/application-info-edit.vue","<script>\n\nimport { mapGetters, mapActions } from \"vuex\"\n\nimport CommentsListComponent from \"./comment-list-component.vue\"\nimport KeywordsComponent from \"./keywords-component.vue\"\n\nimport { keyBy } from \"lodash-es\"\n\nexport default {\n  name: \"CommentsComponent\",\n  props: {\n    application: {\n      required: true\n    },\n  },\n  data() {\n    return {\n      newCommentContent: \"\",\n      showError: false,\n    }\n  },\n  computed: {\n    ...mapGetters(\"comments\", [\"commentsByApplication\"]),\n  },\n  methods: {\n    ...mapActions(\"comments\", [\"createComment\"]),\n    saveNewComment() {\n      const payload = {applicationId: this.application.id,\n        params: {content: this.newCommentContent}}\n      const that = this\n      this.createComment(payload).then(() => {\n        this.comments = this.commentsByApplication[this.application.id]\n        this.newCommentContent = \"\"\n        this.$emit(\"comment\")\n      }).catch((err) => {\n        this.showError = true\n      })\n    },\n  },\n  components: {\n    KeywordsComponent,\n    CommentsListComponent\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.comments-component\n    div(v-if=\"showError\")\n      p There has been an error when fetching this applicant's comments.\n    div(v-else)\n      comments-list-component(:application=\"application\", @error=\"showError = true\")\n      div.new-comment\n        textarea(v-model=\"newCommentContent\", placeholder=\"Enter new comment...\")\n        button.submit.save-btn(type=\"button\", @click=\"saveNewComment\") Save\n      hr\n    keywords-component(:application=\"application\")\n\n\n\n</template>\n\n<style>\n\n@import \"../../../../init/variables.css\";\n\n  .comments-component {\n    width: 90%;\n    margin: auto;\n\n    & hr {\n      color: var(--textColor);\n      margin: 3em auto;\n    }\n\n    & .new-comment {\n      margin-top: 2em;\n      & textarea {\n        display: block;\n        width: 100%;\n        margin: auto;\n        padding: 1.5em;\n        font-family: var(--textFamily);\n        color: var(--textColor);\n      }\n      & .save-btn {\n        display: block;\n        width: 50%;\n        margin: auto;\n        margin-top: 10px;\n      }\n    }\n\n    & .margin-bottom {\n      margin-bottom: 2em;\n    }\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/modals/person-info/frontend/components/boards/modals/person-info/comments-component.vue","<script>\nimport { setCommentsCallback } from \"cable/board\"\n\nimport { mapGetters, mapActions } from \"vuex\"\nimport { focus } from \"vue-focus\"\nimport Vue from \"vue\"\n\nimport DatesMixin from \"../../../../mixins/dates-mixin\"\n\nimport { keyBy } from \"lodash-es\"\n\nexport default {\n  name: \"CommentsListComponent\",\n  directives: { focus: focus },\n  mixins: [DatesMixin],\n  props: {\n    application: {\n      required: true\n    },\n  },\n  beforeCreate() {\n    setCommentsCallback((data) => {\n      this.fetchApplicationComments(this.application.id).then(() => {\n        this.comments = this.commentsByApplication[this.application.id]\n      })\n    })\n  },\n  async created() {\n    try {\n      if (!this.commentsByApplication[this.application.id]) {\n        await this.fetchApplicationComments(this.application.id)\n      }\n      this.comments = this.commentsByApplication[this.application.id]\n    } catch(err) {\n      this.$emit(\"error\")\n    }\n  },\n  data() {\n    return {\n      comments: [],\n      editingComments: {},\n    }\n  },\n  computed: {\n    ...mapGetters(\"comments\", [\"commentsByApplication\"]),\n    hasComments() {\n      return this.comments && this.comments.length\n    },\n  },\n  methods: {\n    ...mapActions(\"comments\", [\"fetchApplicationComments\", \"updateComment\"]),\n    authorName(comment) {\n      return (comment.author_is_current) ? \"You\" : comment.author_name\n    },\n    toggleEditable(comment) {\n      if (!comment.author_is_current) return\n      Vue.set(this.editingComments, comment.id, true)\n    },\n    isEditingComment(comment) {\n      return !!this.editingComments[comment.id]\n    },\n    async onEditContent(event, comment) {\n      if (event.target.innerText === comment.content) {\n        Vue.delete(this.editingComments, comment.id)\n        return\n      }\n      const payload = {applicationId: this.application.id,\n        commentId: comment.id,\n        params: {content: event.target.innerText}}\n      try {\n        await this.updateComment(payload).then(() => {\n          this.comments = this.commentsByApplication[this.application.id]\n        })\n        Vue.delete(this.editingComments, comment.id)\n      } catch(err) {\n        this.$emit(\"error\")\n      }\n    },\n  },\n}\n</script>\n\n<template lang=\"pug\">\n  div.comment-list-component\n    h2 Comments\n    ul.comment-list(v-if=\"hasComments\")\n      li.comment-line(v-for=\"comment in comments\")\n        div.comment-header\n          span.comment-timestamp By &nbsp;\n          span.comment-author(:class=\"{'author-current': comment.author_is_current}\") {{authorName(comment)}}\n          span.comment-timestamp on {{formattedDateTime(comment.created_at)}}\n          button.comment-edit(v-if=\"comment.author_is_current\", v-tooltip=\"'Edit comment'\", @click=\"toggleEditable(comment)\")\n        div.comment-content(v-focus=\"isEditingComment(comment)\", :contenteditable=\"isEditingComment(comment)\", :class=\"{'--editing': isEditingComment(comment)}\", @blur=\"onEditContent($event, comment)\") {{comment.content}}\n\n\n\n</template>\n\n<style>\n\n@import \"../../../../init/variables.css\";\n\n  .comment-list-component {\n\n    & .comment-list {\n      margin-bottom: 1em;\n    }\n\n    & .comment-line {\n      padding: 5px;\n      box-shadow: -2px 2px 6px rgba(0, 0, 0, .5);\n      margin-bottom: 1em;\n      background-color: gray(230);\n      border-radius: 3px;\n    }\n\n    & .comment-header {\n      padding: 3px 15px;\n      text-align: right;\n    }\n\n    & .comment-author {\n      font-size: .8em;\n      font-weight: bold;\n      background-color: var(--themeColor);\n      display: inline-block;\n      padding: 5px;\n      border-radius: 2px;\n      color: white;\n      border: 1px solid gray(204);\n\n      &.author-current {\n        background-color: #00a6ff;\n      }\n    }\n    & .comment-timestamp {\n      display: inline-block;\n      font-size: .7em;\n      margin-left: 5px;\n      color: gray(90);\n    }\n    & .comment-content {\n      width: 90%;\n      padding: 1.5em;\n      border: 1px solid transparent;\n      border-radius: 3px;\n      margin: 3px auto 10px auto;\n      background-color: white;\n      box-shadow: -1px 1px 6px rgba(0, 0, 0, .5);\n      font-family: var(--textFamily);\n      color: var(--textColor);\n      font-size: .9em;\n      line-height: 1.5em;\n      white-space: pre-wrap;\n      &.--editing {\n        background-color: gray(240);\n      }\n    }\n\n    & .comment-edit {\n    width: 25px;\n    height: 25px;\n    background: url(\"../../../../static/icons/pencil-charcoal.svg\") center bottom / 60% no-repeat;\n    padding: 0;\n      &:hover {\n        background: url(\"../../../../static/icons/pencil.svg\") center bottom / 70% no-repeat;\n      }\n    }\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/modals/person-info/frontend/components/boards/modals/person-info/comment-list-component.vue","<script>\n\nimport { mapGetters, mapActions } from \"vuex\"\nimport Vue from \"vue\"\n\nimport Autocomplete from 'vuejs-auto-complete'\n\nexport default {\n  name: \"KeywordsComponent\",\n  props: {\n    application: {\n      required: true\n    },\n  },\n  async created() {\n    try {\n      if (!this.keywordsByApplication[this.application.id]) {\n        await this.fetchApplicationKeywords(this.application.id)\n      }\n      this.keywords = this.keywordsByApplication[this.application.id]\n    } catch(err) {\n      this.showError = true\n    }\n  },\n  data() {\n    return {\n      keywords: [],\n      autocompleteList: [],\n      showError: false,\n    }\n  },\n  computed: {\n    ...mapGetters(\"keywords\", [\"keywordsByApplication\", \"autocompleteEndpoint\"]),\n  },\n  methods: {\n    ...mapActions(\"keywords\", [\"fetchApplicationKeywords\", \"updateKeywords\",\n      \"removeKeywords\"]),\n    addNewKeyword(keyword) {\n      if (keyword.constructor === Object) {\n        keyword = keyword.value\n      }\n      const payload = { applicationId: this.application.id,\n        params: { keywords: [keyword] } }\n      this.updateKeywords(payload).then(() => {\n        this.$refs.autocomplete.clearValues()\n        this.keywords = this.keywordsByApplication[this.application.id]\n      }).catch((err) => {\n        this.showError = true\n      })\n    },\n    removeKeyword(keyword) {\n      const payload = { applicationId: this.application.id,\n        params: { keywords: [keyword] } }\n      this.removeKeywords(payload).then(() => {\n        this.keywords = this.keywordsByApplication[this.application.id]\n      }).catch((err) => {\n        this.showError = true\n      })\n    },\n  },\n  components: {\n    Autocomplete\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.keywords-component\n    h2 Keywords\n    div.keyword-placeholder(v-if=\"showError\")\n      p There has been an error when loading the applicant's keywords.\n    div(v-else)\n      div.keyword-list(v-if=\"keywords.length\")\n        span.keyword-line(v-for=\"keyword in keywords\") {{keyword}}\n          button.remove-btn(@click=\"removeKeyword(keyword)\") x\n      div.keyword-placeholder(v-else)\n        p There are no keywords added to this application so far.\n      div.keyword-form\n        autocomplete(ref=\"autocomplete\", :source=\"autocompleteEndpoint\", @enter=\"addNewKeyword\"\n          results-property=\"data\",\n          @selected=\"addNewKeyword\",\n          placeholder=\"Add a keyword...\")\n\n\n</template>\n\n<style>\n\n  @import \"../../../../init/variables.css\";\n\n  .keywords-component {\n\n    & .keyword-list {\n      padding: .5em;\n      box-shadow: -1px 1px 6px rgba(0, 0, 0, .5);\n      margin-bottom: 1em;\n    }\n\n    & .keyword-line {\n      background-color: beige;\n      font-size: .8em;\n      font-weight: bold;\n      display: inline-block;\n      padding: 5px;\n      border-radius: 2px;\n      color: gray(60%);\n      border: 1px solid gray(80%);\n      margin: 2px;\n      & .remove-btn {\n        background-color: transparent;\n        padding: 0;\n        margin: 0;\n        margin-left: 10px;\n        color: inherit;\n      }\n    }\n\n    & .keyword-placeholder {\n      font-size: .8em;\n      color: var(--textColor);\n    }\n\n    & .keyword-form {\n      font-family: var(--textFamily);\n      & button.submit {\n        width: 10em;\n        display: inline-block;\n        margin-left: 10px;\n        padding: 6px;\n        vertical-align: middle;\n      }\n    }\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/modals/person-info/frontend/components/boards/modals/person-info/keywords-component.vue","<script>\nimport { setEmailsCallback } from \"cable/board\"\n\nimport { mapGetters, mapActions } from \"vuex\"\n\nimport { SlideXLeftTransition, CollapseTransition } from 'vue2-transitions'\n\nimport DatesMixin from \"../../../../mixins/dates-mixin\"\n\nimport Modal from \"../../../shared/modal.vue\"\nimport ComposeEmail from \"./correspondence/compose-email.vue\"\nimport MessageList from \"./correspondence/message-list.vue\"\nimport FlashMessages from \"./correspondence/flash-messages.vue\"\n\nexport default {\n  name: \"Correspondence\",\n  mixins: [DatesMixin],\n  props: {\n    person: {\n      required: true\n    },\n    section: {},\n  },\n  data() {\n    return {\n      correspondence: null,\n      showError: false,\n      openThread: null,\n      composing: false,\n      flashMessage: null,\n      newThread: this.section === \"new\",\n      newMessageThread: {\n        id: null,\n        participants: [this.person.email],\n        subject: \"\"\n      },\n      newMessageTemplate: null,\n    }\n  },\n  beforeCreate() {\n    setEmailsCallback((data) => {\n      this.fetchPersonEmail(data.refresh_emails.person_id).then(() => {\n        this.correspondence = this.emailByPerson[this.person.uuid]\n      })\n    })\n  },\n  async created() {\n    try {\n      await this.loadPersonCorrespondence()\n      if (this.section === \"new\") {\n        const payload = {phaseId: this.person.phase_id, personId: this.person.uuid}\n        await this.fetchPhaseEmailTemplate(payload).then(() => {\n          this.newMessageTemplate = this.emailTemplatesByPhase[this.person.phase_id]\n        })\n      }\n    } catch(err) {\n      this.showError = true\n    }\n  },\n  computed: {\n    ...mapGetters(\"email\", [\"emailByPerson\"]),\n    ...mapGetters(\"boards\", [\"emailTemplatesByPhase\"]),\n    isLoaded() {\n      return this.person && this.correspondence\n    },\n    newMessageIsLoaded() {\n      if (this.section === \"new\") {\n        return !!this.newMessageTemplate\n      }\n      return true\n    }\n  },\n  methods: {\n    ...mapActions(\"email\", [\"fetchPersonEmail\"]),\n    ...mapActions(\"boards\", [\"fetchPhaseEmailTemplate\"]),\n    loadPersonCorrespondence() {\n      this.fetchPersonEmail(this.person.uuid).then(() => {\n        this.correspondence = this.emailByPerson[this.person.uuid]\n      }).catch((error) => {\n        this.showError = true\n      })\n    },\n    closeModal() {\n      this.$emit(\"close\")\n    },\n    getThreadSubject(thread) {\n      return thread.subject || \"(no subject)\"\n    },\n    getThreadSnippet(thread) {\n      if (thread.messages.length) {\n        return thread.messages[0].snippet\n      }\n      return \"(no content)\"\n    },\n    goToThreadList() {\n      this.newThread = false\n      this.composing = false\n      this.openThread = null\n    },\n    scrapMessage() {\n      this.composing = false\n    },\n    onSuccess() {\n      this.$emit(\"email\")\n      this.showFlash(\"success\")\n    },\n    async showFlash(status) {\n      this.composing = false\n      this.flashMessage = status\n      const wrapper = this.$el.querySelector(\".correspondence-wrapper\")\n      wrapper.scrollBy({top: -10000, behavior: \"smooth\"})\n      setTimeout(() => {\n        this.flashMessage = null\n      }, 5000)\n    },\n    onComposing() {\n      this.$emit(\"composing\")\n    }\n  },\n  components: {\n    Modal,\n    ComposeEmail,\n    MessageList,\n    SlideXLeftTransition,\n    CollapseTransition,\n    FlashMessages\n  }\n}\n</script>\n\n<template lang=\"pug\">\n\n  div\n    div(v-if=\"showError\", style=\"text-align: center;\")\n      p There was an error when fetching this applicant's correspondence.\n      p Make sure that this application has permission to access the associated Gmail account by navigating\n        span\n          a(href=\"/admin/google/authorize\", target=\"_blank\") &nbsp; here.\n      p Otherwise, please try reloading the page or contact technical support.\n\n    div.correspondence(v-if=\"isLoaded\")\n\n      slide-x-left-transition(group)\n        div.correspondence-wrapper.thread-list(v-if=\"!openThread && !newThread\", :key=\"'threadList'\")\n          button.submit.new-thread-btn(type=\"button\", @click=\"newThread = true\") New Thread\n          div(v-if=\"!correspondence.threads.length\")\n            p You have no correspondence with this applicant so far.\n          div(v-else)\n            h2 All Threads\n            ul\n              li.thread-line(v-for=\"thread in correspondence.threads\", @click=\"openThread = thread\")\n                h3 {{getThreadSubject(thread) | truncate(25)}}\n                  span.message-count ({{thread.messages.length}})\n                span.snippet {{getThreadSnippet(thread) | truncate(25)}}\n                span.timestamp {{formattedDate(thread.timestamp)}}\n\n        div.correspondence-wrapper.thread(v-if=\"openThread\", :key=\"'threadShow'\")\n          flash-messages(:flash-message=\"flashMessage\", @close=\"flashMessage = null\")\n          div\n            button.icon.back-btn(@click=\"goToThreadList\") Back\n            h2 Messages from thread \"{{getThreadSubject(openThread)}}\"\n            button.icon.edit-btn(type=\"button\", @click=\"composing = !composing\", v-tooltip=\"'Compose message'\")\n            div.attachment-msg\n              p The messages below may contain attachments not shown here.\n              p Please visit the associated Gmail account to view or send attachments.\n          collapse-transition\n            compose-email(v-show=\"composing\", :thread=\"openThread\", @scrap=\"scrapMessage\", @success=\"onSuccess\", @error=\"showFlash('error')\", @composing=\"onComposing\")\n          message-list(:thread=\"openThread\")\n\n        div.correspondence-wrapper.new-thread(v-if=\"newThread && newMessageIsLoaded\", :key=\"'threadNew'\")\n          flash-messages(:flash-message=\"flashMessage\", @close=\"flashMessage = null\")\n          button.icon.back-btn(@click=\"goToThreadList\") Back\n          compose-email(:thread=\"newMessageThread\", :message=\"newMessageTemplate\", @scrap=\"scrapMessage\", @success=\"onSuccess\", @error=\"showFlash('error')\", @composing=\"onComposing\")\n\n\n\n</template>\n\n<style>\n\n@import \"../../../../init/variables.css\";\n\n  .correspondence {\n    & .correspondence-wrapper {\n      max-height: var(--windowHeight)px;\n      padding: 2em 2em;\n    }\n    & .attachment-msg {\n      font-size: .8em;\n      border: 1px solid;\n      padding: 5px;\n      text-align: center;\n      & p {\n        margin: 0;\n      }\n    }\n    & .thread-line {\n      cursor: pointer;\n      padding: 1em .5em;\n      margin-bottom: 3px;\n      border-bottom: 1px solid gray(190);\n      & h3 {\n        width: 40%;\n        display: inline-block;\n        margin: 0;\n        padding: 0;\n        font-size: 1.1em;\n      }\n      & .message-count {\n        margin-left: 5px;\n      }\n      & .timestamp {\n        width: 20%;\n      }\n      & .snippet {\n        width: 40%;\n        padding: 0 1em;\n      }\n      & .timestamp, & .message-count, & .snippet {\n        font-size: 1em;;\n      }\n    }\n    & .timestamp, & .message-count, & .snippet {\n      font-size: .8em;\n      color: gray(190);\n      display: inline-block;\n    }\n    & .icon {\n      display: inline-block;\n      padding: 5px;\n      margin: auto 5px;\n      width: 32px;\n      height: 32px;\n    }\n    & .back-btn {\n      border: none;\n      display: block;\n      background: url(\"../../../../static/icons/arrow-left-charcoal.svg\") left center / 60% no-repeat;\n      padding-left: 40px;\n      color: black;\n      &:hover {\n        background: url(\"../../../../static/icons/arrow-left.svg\") left center / 70% no-repeat;\n      }\n    }\n    & .edit-btn {\n      background: url(\"../../../../static/icons/pencil-charcoal.svg\") left center / 60% no-repeat;\n      &:hover {\n        background: url(\"../../../../static/icons/pencil.svg\") left center / 70% no-repeat;\n      }\n    }\n    & .flash {\n      width: 70%;\n      margin: auto;\n      padding: 15px;\n      border-radius: 5px;\n      color: white;\n      text-align: center;\n      &.success {\n        background-color: color(green alpha(50%));\n      }\n      &.error {\n        background-color: color(red alpha(50%));\n      }\n    }\n    & .thread {\n      & h2 {\n        display: inline-block;\n      }\n    }\n\n    & .new-thread-btn {\n      padding: 5px;\n      width: auto;\n      margin: unset;\n    }\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/modals/person-info/frontend/components/boards/modals/person-info/correspondence.vue","<script>\nimport { mapActions } from \"vuex\"\n\nimport { VueEditor } from 'vue2-editor'\n\nimport LoadingScreen from \"../../../../shared/loading-screen.vue\"\n\nimport DatesMixin from \"../../../../../mixins/dates-mixin\"\n\nexport default {\n  name: \"ComposeEmail\",\n  mixins: [DatesMixin],\n  props: {\n    thread: {\n      required: true\n    },\n    message: {}\n  },\n  created() {\n    this.messageRecipients = this.thread.participants.slice(0)\n  },\n  mounted() {\n    this.$emit(\"composing\")\n  },\n  data() {\n    return {\n      isLoading: false,\n      messageRecipients: [],\n      messageCc: [],\n      messageBCc: [],\n      composedSubject: (this.message) ? this.message.subject : this.thread.subject,\n      composedMessage: (this.message) ? this.message.body : \"\",\n      newAddress: null,\n      newCcAddress: null,\n      newBCcAddress: null,\n    }\n  },\n  computed: {\n  },\n  methods: {\n    ...mapActions(\"email\", [\"sendEmail\"]),\n    addNewAddressToList(kind) {\n      let list, address\n      if (kind === \"recipient\") {\n        list = this.messageRecipients\n        address = this.newAddress\n        this.newAddress = null\n      } else if (kind === \"cc\") {\n        list = this.messageCc\n        address = this.newCcAddress\n        this.newCcAddress = null\n      } else if (kind === \"bcc\") {\n        list = this.messageBCc\n        address = this.newBCcAddress\n        this.newBCcAddress = null\n      }\n      if (address && (list.indexOf(address) < 0)) {\n        list.push(address)\n      }\n    },\n    removeAddressFromList(kind, address) {\n      let list\n      if (kind === \"recipient\") {\n        list = this.messageRecipients\n      } else if (kind === \"cc\") {\n        list = this.messageCc\n      } else if (kind === \"bcc\") {\n        list = this.messageBCc\n      }\n      const index = list.indexOf(address)\n      if (index > -1) {\n        list.splice(index, 1)\n      }\n    },\n    scrapMessage() {\n      this.$emit(\"scrap\")\n      this.composedMessage = \"\"\n      this.messageRecipients = this.thread.participants.slice(0)\n      this.messageCc = []\n      this.messageBCc = []\n    },\n    async sendMessage() {\n      if (this.isLoading) return\n      const payload = {\n        threadId: this.thread.id,\n        params: {\n          recipients: this.messageRecipients,\n          cc: this.messageCc,\n          bcc: this.messageBCc,\n          subject: this.composedSubject,\n          body: this.composedMessage\n        }\n      }\n      this.isLoading = true\n      await this.sendEmail(payload).then(() => {\n        this.$emit(\"success\")\n      }).catch((error) => {\n        this.$emit(\"error\")\n      })\n      this.isLoading = false\n    }\n  },\n  components: {\n    LoadingScreen,\n    VueEditor\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.compose-email\n    div.loading(v-if=\"isLoading\")\n    div.address-list\n      div.address-list-row\n        label To\n        div.respond-to-address-list\n          span.respond-to-address(v-for=\"address in messageRecipients\") {{address}}\n            button.remove-btn(type=\"button\", @click=\"removeAddressFromList('recipient', address)\") x\n          input.respond-to-address-input(v-model=\"newAddress\", @blur=\"addNewAddressToList('recipient')\", @keyup.enter=\"addNewAddressToList('recipient')\", placeholder=\"Add Recipient\")\n      div.address-list-row\n        label Cc\n        div.respond-to-address-list\n          span.respond-to-address(v-for=\"address in messageCc\") {{address}}\n            button.remove-btn(type=\"button\", @click=\"removeAddressFromList('cc', address)\") x\n          input.respond-to-address-input(v-model=\"newCcAddress\", @blur=\"addNewAddressToList('cc')\", @keyup.enter=\"addNewAddressToList('cc')\", placeholder=\"Add Cc\")\n      div.address-list-row\n        label Bcc\n        div.respond-to-address-list\n          span.respond-to-address(v-for=\"address in messageBCc\") {{address}}\n            button.remove-btn(type=\"button\", @click=\"removeAddressFromList('bcc', address)\") x\n          input.respond-to-address-input(v-model=\"newBCcAddress\", @blur=\"addNewAddressToList('bcc')\", @keyup.enter=\"addNewAddressToList('bcc')\", placeholder=\"Add Bcc\")\n    div.composing-window\n      div.action-menu\n        button.icon.scrap-btn(type=\"button\", @click=\"scrapMessage\", v-tooltip=\"'Scrap'\")\n        button.icon.send-btn(type=\"button\", @click=\"sendMessage\", v-tooltip=\"'Send'\")\n      div.subject-line-row\n        label Subject\n        input.subject-line(v-model=\"composedSubject\")\n      vue-editor(v-model=\"composedMessage\")\n\n\n\n\n</template>\n\n<style>\n@import \"../../../../../init/variables.css\";\n\n  .compose-email {\n    position: relative;\n\n    & .loading {\n      position: absolute;\n      box-shadow: inset 1px 1px 50px rgba(0, 0, 0, .2);\n      background: url(\"../../../../../static/images/spinner-solid.gif\") center center / 10% no-repeat rgba(0,0,0,.3);\n    }\n\n    & .address-list-row, & .subject-line-row {\n      display: flex;\n      padding: .5em;\n      & label {\n        width: 10%;\n      }\n      & .respond-to-address-list, & .subject-line {\n        width: 90%;\n        max-width: 90%;\n      }\n    }\n    & .respond-to-address {\n      display: inline-block;\n      padding: 3px 10px;\n      margin: 0 5px 5px 0;\n      border-radius: 5px;\n      background-color: gray(200);\n    }\n    & .respond-to-address-input, & .subject-line {\n      border: none;\n      box-shadow: var(--fieldsBoxShadow);\n      display: block;\n    }\n    & .remove-btn {\n      padding: 0;\n      padding-left: 3px;\n      background-color: transparent;\n      &:hover {\n        color: black;\n      }\n    }\n    & .action-menu {\n      height: 32px;\n      & .icon {\n        float: right;\n      }\n    }\n    & .scrap-btn {\n      background: url(\"../../../../../static/icons/bin-charcoal.svg\") left center / 60% no-repeat;\n      &:hover {\n        background: url(\"../../../../../static/icons/bin.svg\") left center / 70% no-repeat;\n      }\n    }\n    & .send-btn {\n      background: url(\"../../../../../static/icons/paper-plane-charcoal.svg\") left center / 60% no-repeat;\n      &:hover {\n        background: url(\"../../../../../static/icons/paper-plane.svg\") left center / 70% no-repeat;\n      }\n    }\n\n    & .subject-line {\n      margin-bottom: 1em;\n      margin-left: 1em;\n      width: 80%;\n    }\n\n    & .composing-window {\n      display: block;\n      width: 90%;\n      margin: 1em auto;\n      min-width: 25em;\n      textarea {\n        min-height: calc(var(--windowHeight) * .3)px;\n        max-height: calc(var(--windowHeight) * .5)px;\n        width: 100%;\n        max-width: 100%;\n        min-width: 100%;\n        box-shadow: var(--fieldsBoxShadow);\n        border: none;\n        padding: 1em;\n        font-family: 'Open Sans', Arial, sans-serif;\n      }\n    }\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/modals/person-info/correspondence/frontend/components/boards/modals/person-info/correspondence/compose-email.vue","<script>\n\nimport Vue from \"vue\"\nimport DatesMixin from \"../../../../../mixins/dates-mixin\"\n\nimport { CollapseTransition } from 'vue2-transitions'\n\nexport default {\n  name: \"MessageList\",\n  mixins: [DatesMixin],\n  props: {\n    thread: {\n      required: true\n    }\n  },\n  data() {\n    return {\n      openMessages: {}\n    }\n  },\n  computed: {\n  },\n  methods: {\n    toggleSelectMessage(message) {\n      if (this.openMessages[message.id]) {\n        Vue.delete(this.openMessages, message.id)\n      } else {\n        Vue.set(this.openMessages, message.id, true)\n      }\n    },\n    getToAddresses(message) {\n      return message.to_addresses.join(\", \")\n    }\n  },\n  components: {\n    CollapseTransition\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.message-list\n    ul\n      li.message-line(v-for=\"message in thread.messages\")\n        div.heading(@click=\"toggleSelectMessage(message)\")\n          h3 {{message.from_address | truncate(25)}}\n          div.snippet(v-html=\"message.snippet\")\n          span.timestamp {{formattedDate(message.timestamp)}}\n        collapse-transition\n          div.content(v-if=\"openMessages[message.id]\")\n            div.info-row\n              label From\n              div.info {{message.from_address}}\n            div.info-row\n              label To\n              div.info {{getToAddresses(message)}}\n            div.info-row\n              label Date\n              div.info {{formattedDateTime(message.timestamp)}}\n            div.message(v-html=\"message.content\")\n\n</template>\n\n<style>\n\n  @import \"../../../../../init/variables.css\";\n\n  .message-list {\n    & .message-line {\n      padding: .5em;\n      margin-bottom: 3px;\n      border-bottom: 1px solid gray(190);\n      & .heading {\n        cursor: pointer;\n        padding: .5em;\n      }\n      & h3 {\n        width: 40%;\n        display: inline-block;\n        margin: 0;\n        padding: 0;\n        font-size: 1.1em;\n      }\n      & .timestamp {\n        width: 20%;\n        float: right;\n      }\n      & .snippet {\n        width: 40%;\n        padding: 0 1em;\n      }\n      & .timestamp, & .message-count, & .snippet {\n        font-size: 1em;\n        color: gray(100);\n      }\n      & .content {\n        padding: 1em;\n        & .info-row {\n          display: flex;\n          width: 50%;\n          padding: 5px 0;\n          font-size: .8em;\n          color: gray(95);\n          & label {\n            width: 20%;\n            padding-right: 10px;\n            font-weight: bold;\n          }\n          & .info {\n            width: 80%;\n          }\n        }\n        & .message {\n          white-space: pre-wrap;\n          margin-top: 1em;\n          font-family: 'Open Sans', Arial, sans-serif;\n        }\n      }\n    }\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/modals/person-info/correspondence/frontend/components/boards/modals/person-info/correspondence/message-list.vue","<script>\n\nimport { SlideYUpTransition } from 'vue2-transitions'\n\nexport default {\n  name: \"FlashMessages\",\n  props: {\n    flashMessage: {}\n  },\n  data() {\n    return {\n    }\n  },\n  methods: {\n    closeFlash() {\n      this.$emit(\"close\")\n    }\n  },\n  components: {\n    SlideYUpTransition\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.flash-messages(@click=\"closeFlash\")\n    slide-y-up-transition\n      div.flash.success(v-if=\"flashMessage === 'success'\") The message has been sent.\n    slide-y-up-transition\n      div.flash.error(v-if=\"flashMessage === 'error'\") There was an error when sending the message.\n\n\n\n</template>\n\n<style>\n\n  .flash-messages {\n\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/modals/person-info/correspondence/frontend/components/boards/modals/person-info/correspondence/flash-messages.vue","<script>\n\nimport Modal from \"../../shared/modal.vue\"\n\nexport default {\n  name: \"ServerError\",\n  props: {\n    errorType: {}\n  },\n  methods: {\n    closeModal() {\n      this.$emit(\"close\")\n    }\n  },\n  components: {\n    Modal,\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  modal.error-message(@close=\"closeModal\")\n    h1.error-message-header(slot=\"header\")\n      span(v-if=\"errorType === 'invalid_milestone_date'\") Invalid milestone date\n      span(v-else) Server Error\n    div.error-message-body(slot=\"body\")\n      div(v-if=\"errorType === 'invalid_milestone_date'\")\n        p The date for this milestone could not be updated.\n        p Please make sure the date you have chosen is within the range of this person's Starting and Ending dates.\n      div(v-else)\n        p There has been an error with this action.\n        p Please try reloading the page or contact technical support.\n\n\n\n\n</template>\n\n<style>\n\n  @import \"../../../init/index.css\";\n\n  .error-message {\n    min-height: 300px;\n    max-height: 500px;\n    overflow: auto;\n    text-align: center;\n\n\n    & .error-message-body {\n    color: var(--paragraphColor);\n      width: 70%;\n      max-width: 600px;\n      margin: auto;\n      padding: 1em;\n      font-size: 1.1em;\n      border-radius: 5px;\n    }\n  }\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/modals/frontend/components/boards/modals/server-error.vue","<script>\nimport { mapGetters, mapActions } from \"vuex\"\n\nimport { find } from \"lodash-es\"\n\nimport { sendStatusMessage } from \"cable/board\"\n\nimport PersonCard from \"./person-card.vue\"\n\nexport default {\n  name: \"Phase\",\n  props: {\n    phase: {\n      required: true\n    }\n  },\n  data() {\n    return {\n      beingDraggedOver: false\n    }\n  },\n  computed: {\n    ...mapGetters(\"boards\", [\"currentBoard\"]),\n    description() {\n      return this.phase.description  || \"No description\"\n    },\n    emailLabelStyle() {\n      if (!this.phase.color) return \"\"\n      return {\"background-color\": \"#ffffff\", \"color\": this.phase.color, \"border-color\": this.phase.color}\n    }\n  },\n  methods: {\n    ...mapActions(\"boards\", [\"changePersonPhase\"]),\n    openModal(modalName, data) {\n      this.$emit('modal', modalName, data)\n    },\n    onDragOver(event) {\n      this.beingDraggedOver = true\n      event.dataTransfer.dropEffect = \"move\"\n    },\n    onDrop(event) {\n      this.beingDraggedOver = false\n      event.dataTransfer.dropEffect = \"move\"\n      const [personId, oldPhaseId] = event.dataTransfer.getData(\"text\")\n        .split(\",\")\n      if (oldPhaseId === this.phase.uuid) return false\n      const payload = {phaseId: this.phase.uuid, personId, oldPhaseId}\n      this.changePersonPhase(payload).then(() => {\n        this.broadcastPhaseChange(personId)\n        if (this.phase.has_callback) {\n          this.showEmailModal(personId)\n        }\n      }).catch((err) => {\n        this.openModal(\"server-error\", {})\n      })\n    },\n    showEmailModal(personId) { //pass personId instead of person to avoid stale data\n      const person = find(this.phase.persons, (p) => p.uuid === personId)\n      this.openModal(\"person-info\", { person, tab: \"email\"})\n    },\n    broadcastPhaseChange(personId) {\n      const person = find(this.phase.persons, (p) => p.uuid === personId)\n      const params = {applicant: person.full_name, phase: this.phase.title}\n      sendStatusMessage(\"phase_change\", params)\n    },\n  },\n  components: {\n    PersonCard\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.phase\n    h2.heading\n      span.title {{phase.title}}\n      br\n      span.email-label(v-if=\"phase.email_label\", v-tooltip=\"'Gmail tag label'\", :style=\"emailLabelStyle\") {{phase.email_label}}  &#8728;\n      span.email-label.no-label(v-else, :style=\"emailLabelStyle\") No email label\n      span.description(v-tooltip=\"description\")\n    div.stats\n      p #[span.count {{phase.persons.length}}] {{phase.persons.length | pluralize('person', 'people')}} in this section\n    div.drop-card(\n      v-tooltip=\"`Drop person here to add to '${phase.title}'`\",\n      @dragover.prevent=\"onDragOver\",\n      @dragend.prevent=\"beingDraggedOver = false\",\n      @dragleave.prevent=\"beingDraggedOver = false\",\n      @drop.prevent=\"onDrop\"\n      :class=\"{'--expanded': beingDraggedOver}\")\n    person-card.person-card(v-for=\"person in phase.persons\", :key=\"person.uuid\", :person=\"person\", @modal=\"openModal\")\n</template>\n\n<style>\n\n@import \"../../init/variables.css\";\n\n.phase {\n\n  border-radius: 2px;\n  width: 300px;\n  overflow: auto;\n  margin: 1em;\n  padding: .5em;\n  box-shadow: -2px 2px 6px;\n\n  & .heading {\n    font-size: 1.2em;\n    padding: 0 5px;\n  }\n\n  & .heading .description {\n    height: 1em;\n    width: 1em;\n    display: inline-block;\n    background: url(\"../../static/icons/info.svg\") center center / 100% no-repeat;\n    float: right;\n  }\n\n  & .email-label {\n    font-size: .7em;\n    color: gray(60%);\n    background-color: beige;\n    padding: 2px 5px;\n    padding-right: 5px;\n    border: 1px solid gray(80%);\n    border-radius: 10px 40px 40px 10px;\n    display: inline-block;\n    &.no-label {\n      background-color: rgb(191, 233, 217);\n      border-radius: 2px;\n    }\n  }\n\n  & .stats {\n    font-size: .9em;\n    margin-left: 1em;\n    & .count {\n      font-weight: bold;\n    }\n    & .count:before {\n      content: \"\";\n      background: url(\"../../static/icons/user-green.svg\") center center / 100% no-repeat;\n      width: 15px;\n      height: 15px;\n      display: inline-block;\n      margin-right: 4px;\n      margin-bottom: -1px;\n    }\n  }\n\n  & .drop-card {\n    height: 1em;\n    padding: 1em;\n    margin: 1em auto;\n    opacity: .3;\n    border: 3px dashed var(--themeColor);\n    transition-property: opacity, height;\n    background: url(\"../../static/icons/plus-green.svg\") center center / 5% no-repeat;\n    transition-duration: .2s;\n    transition-timing-function: ease;\n\n    &.--expanded {\n      height: 6em;\n      opacity: 1;\n    }\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/frontend/components/boards/phase.vue","<script>\n\nexport default {\n  name: \"PersonCard\",\n  props: {\n    person: {\n      required: true\n    }\n  },\n  data() {\n    return {\n      beingDragged: false,\n    }\n  },\n  methods: {\n    openPersonInfoModal() {\n      this.$emit(\"modal\", \"person-info\", {person: this.person})\n    },\n    openCorrespondenceModal() {\n      this.$emit(\"modal\", \"correspondence\", {person: this.person})\n    },\n    onDragStart(event) {\n      this.beingDragged = true\n      event.dataTransfer.setData(\"text/plain\", `${this.person.uuid},${this.person.phase_id}`)\n\n      const placeholder = new Image()\n      placeholder.src = require(\"../../static/icons/user-round-charcoal.svg\")\n      event.dataTransfer.setDragImage(placeholder, 40, 40)\n      event.dataTransfer.dropEffect = \"move\"\n    },\n    onDragEnd(event) {\n      this.beingDragged = false\n    }\n  },\n}\n</script>\n\n<template lang=\"pug\">\n  div.person-card(:draggable=\"true\",\n    @dragstart=\"onDragStart\",\n    @dragend.prevent=\"onDragEnd\",\n    :class=\"{'--hidden': beingDragged}\")\n    div.card-content\n      h3.heading.link(@click=\"openPersonInfoModal\", v-tooltip=\"`See person's information`\") {{person.full_name}}\n      p.icon-bg.position {{person.position}}\n      p.icon-bg.semester {{person.starting_date}}\n      p.received Received on: {{person.applied_at}}\n</template>\n\n<style>\n\n@import \"../../init/variables.css\";\n\n.person-card {\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  background-color: var(--cardBg);\n  box-shadow: -1px 1px 4px black;\n  margin-bottom: 15px;\n\n  transition: transform .5s ease;\n\n  & .card-content {\n    font-size: .8em;\n\n    & .link:hover {\n      cursor: pointer;\n      text-decoration: underline;\n    }\n\n    & .icon-bg:before {\n      content: \"\";\n      width: 15px;\n      height: 15px;\n      display: inline-block;\n      margin-right: 4px;\n      margin-bottom: -1px;\n    }\n\n    & .email:before {\n      background: url(\"../../static/icons/envelop.svg\") center center / 100% no-repeat;\n    }\n\n    & .position:before {\n      background: url(\"../../static/icons/library.svg\") center center / 100% no-repeat;\n    }\n\n    & .semester:before {\n      background: url(\"../../static/icons/calendar.svg\") center center / 100% no-repeat;\n    }\n\n    & .received {\n      font-size: .9em;\n    }\n  }\n\n  &.--hidden {\n    opacity: .5;\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/frontend/components/boards/person-card.vue","<script>\n\nimport { mapGetters } from \"vuex\"\n\nimport AdminNav from \"components/shared/admin-nav.vue\"\nimport DropBox from \"./board-sidebar/drop-box.vue\"\nimport LoggedInUsers from \"./board-sidebar/logged-in-users.vue\"\n\nexport default {\n  name: \"BoardSidebar\",\n  props: {\n    user: {\n      required: true\n    },\n  },\n  data() {\n    return {\n    }\n  },\n  computed: {\n    ...mapGetters(\"boards\", [\"finalPhases\"]),\n    userInitials() {\n      return this.user.name[0] + this.user.lastname[0]\n    },\n    userTooltip() {\n      return `${this.user.name} ${this.user.lastname} (${this.user.email})`\n    }\n  },\n  methods: {\n    openModal(modalName, data) {\n      this.$emit('modal', modalName, data)\n    },\n  },\n  components: {\n    AdminNav,\n    DropBox,\n    LoggedInUsers\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.board-sidebar\n    div.heading\n      span.circle.user-initials(v-tooltip=\"userTooltip\") {{userInitials}}\n      admin-nav.admin-links\n    logged-in-users.logged-in\n\n    div.drop-boxes\n      drop-box.box(v-for=\"phase in finalPhases\", :phase=\"phase\", @modal=\"openModal\")\n\n</template>\n\n<style>\n\n@import \"../../init/variables.css\";\n\n.board-sidebar {\n  background-color: var(--themeColor);\n  display: flex;\n  overflow-y: auto;\n  flex-direction: column;\n  justify-content: space-between;\n  box-shadow: -2px 0px 6px;\n  z-index: 4;\n  & .heading {\n    text-align: left;\n    padding: 10px;\n    display: flex;\n    justify-content: space-between;\n    & * {\n      margin: auto 3px;\n    }\n\n    & .admin-links {\n      display: flex;\n      flex-wrap: wrap;\n      color: white;\n      font-size: .8em;\n      text-decoration: underline;\n      & .admin-link {\n        display: inline-block;\n        padding: 5px;\n        &:before {\n          content: none;\n        }\n      }\n      & select.admin-link {\n        width: 90%;\n        margin-left: 0;\n        padding: 0;\n      }\n    }\n  }\n  & .logged-in {\n    height: 40%;\n  }\n\n  & .circle {\n    font-weight: bold;\n    display: inline-block;\n    background-color: white;\n    color: var(--themeColor);\n    padding: 10px;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    line-height: 2em;\n    text-align: center;\n  }\n\n  & .user-initials {\n    text-transform: uppercase;\n  }\n\n  & .drop-boxes {\n    height: 50%;\n    overflow-y: auto;\n    display: flex;\n    flex-direction: column;\n  }\n  & .box {\n    width: 90%;\n    margin: auto;\n    min-height: 100px;\n    margin-bottom: 1em;\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/frontend/components/boards/board-sidebar.vue","<script>\n\nimport { mapGetters, mapActions } from \"vuex\"\n\nimport FilterComponent from \"components/shared/filter-component.vue\"\nimport CsvComponent from \"components/shared/csv-component.vue\"\n\nexport default {\n  name: \"AdminNav\",\n  data() {\n    return {\n      routes: [\n        \"timeline\",\n        \"profiles\"\n      ],\n      boardSlug: null\n    }\n  },\n  async created() {\n    if (!this.boards.length) {\n      await this.fetchAllBoards()\n    }\n  },\n  computed: {\n    ...mapGetters(\"boards\", [\"boards\"]),\n    ...mapGetters(\"profiles\", [\"profiles\"]),\n  },\n  methods: {\n    ...mapActions(\"boards\", [\"fetchAllBoards\"]),\n    navigateToBoard() {\n      if (!this.boardSlug) return\n      this.$router.push({name: \"board\", params: { boardSlug: this.boardSlug }})\n    },\n    emitFilteredProfiles(profileIds, filtering) {\n      this.$emit(\"filter\", profileIds.map((id) => parseInt(id)), filtering)\n    }\n  },\n  components: {\n    FilterComponent,\n    CsvComponent\n  },\n  watch: {\n    '$route' (to, from) {\n      if (to.name === from.name) {\n        window.location.reload()\n      }\n    }\n  }\n}\n</script>\n\n<template lang=\"pug\">\n    nav.admin-nav\n      filter-component.filter(v-if=\"$route.name !== 'board'\", :collection=\"profiles\", @filter=\"emitFilteredProfiles\")\n      csv-component(v-if=\"$route.name === 'profiles'\")\n      div.nav-links\n        a.admin-link(href=\"/admin\", target=\"_blank\") Dashboard\n        router-link.admin-link(v-for=\"route in routes\", :to=\"{name: route}\", v-if=\"$route.name !== route\") {{route | capitalize}}\n        select.admin-link(v-model=\"boardSlug\", @change=\"navigateToBoard\")\n          option(:value=\"null\") -- Go To Board --\n          option(v-for=\"board in boards\", :value=\"board.slug\") {{board.title}}\n\n\n</template>\n\n<style>\n\n@import \"../../init/variables.css\";\n\n.admin-nav {\n  padding: 1em;\n  padding-right: 2em;\n  border-bottom: 3px solid var(--themeColor);\n  display: flex;\n  justify-content: space-between;\n\n  & .filter {\n    label {\n      margin-right: 5px;\n    }\n  }\n\n  & .admin-links {\n    display: flex;\n    justify-content: flex-end;\n  }\n\n  & .admin-link {\n    display: inline-block;\n    padding: 5px;\n    &:before {\n      content: \"⚪ \";\n      color: var(--themeColor);\n    }\n  }\n\n  & select.admin-link {\n    width: 20em;\n    margin-left: 1em;\n    padding: 10px;\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/shared/frontend/components/shared/admin-nav.vue","<script>\n\nimport { mapGetters, mapActions } from \"vuex\"\n\nimport _ from \"lodash-es\"\n\nexport default {\n  name: \"FilterComponent\",\n  props: {\n    collection: { default: () => [] }\n  },\n  data() {\n    return {\n      q: \"\",\n      filteredIds: []\n    }\n  },\n  computed: {\n    ...mapGetters(\"filters\", [\"filteredProfileIds\"]),\n    filterInstructions() {\n      const instructions = [\n        \"To filter by:\",\n        \"- Status:<br>Status::&lt;status name&gt; (active, incoming, rejected, or finished)\",\n        \"- Milestone name:<br>Milestone::&lt;milestone name&gt;\",\n        \"- Column - separate column name and value with two colons (::):<br>&lt;column name 1&gt;::&lt;value 1&gt;\",\n        \"- Exact date:<br>&lt;date column name&gt;::&lt;date value&gt; (ex: winter 2019, july 4 2070)\",\n        \"- Before a date - add 'less than' sign (&lt;):<br>&lt;date column name&gt;::&lt;&lt;date name&gt;\",\n        \"- After a date - add 'greater than' sign (&gt;):<br>&lt;date column name&gt;::&gt;&lt;date name&gt;\",\n        \"- Milestone date:<br>As for any other dates, but with column name 'Milestone date' (ex: milestone date::winter 2017)\",\n        \"To add multiple search terms by column (multi-choice fields only):<br>&lt;column name&gt;::&lt;value 1&gt;, &lt;value 2&gt;\",\n        \"To use many filters, separate by semicolon (;):<br>&lt;term 1&gt;; &lt;term 2&gt;; &lt;column name 1&gt::&lt;value 1&gt;\",\n      ]\n      return instructions.join(\"<br><br>\")\n    },\n  },\n  methods: {\n    ...mapActions(\"filters\", [\"filterProfilesByQueryString\"]),\n    onFilter() {\n      this.searchITemsToFilter().then(() => {\n        const filtering = !!this.q.length\n        this.$emit(\"filter\", this.filteredIds, filtering)\n      })\n    },\n    searchITemsToFilter() {\n      return this.filterProfilesByQueryString({q: this.q}).then(() => {\n        if (!this.q) {\n          this.filteredIds = this.collection.map((p) => p.id)\n        } else {\n          this.filteredIds = this.filteredProfileIds\n        }\n      })\n    },\n  },\n  watch: {\n    'collection' (val, oldVal) {\n      if (oldVal.length) return // Trigger only on transition from empty array to full\n      if (val.length) {\n        this.filteredIds = this.collection.map((c) => c.id)\n      }\n    }\n  }\n}\n</script>\n\n<template lang=\"pug\">\n    div.search\n      label Filter\n      input(type=\"text\", v-model=\"q\", @keyup.enter=\"onFilter\", placeholder=\"Ex. Kim Lee PhD; Starting Date::Winter 2021\")\n      button.filter-btn(type=\"button\", @click=\"onFilter\") Go\n      div.info(v-tooltip=\"filterInstructions\")\n\n\n</template>\n\n<style>\n\n@import \"../../init/variables.css\";\n\n.search {\n  & .filter-btn {\n    padding: 10px;\n    margin-left: 5px;\n    border: 1px solid transparent;\n    &:hover {\n      border: 1px solid;\n    }\n  }\n\n  & .info {\n    height: 1.8em;\n    width: 1.8em;\n    margin-left: 5px;\n    padding: .6em;\n    display: inline-flex;\n    background: url(\"../../static/icons/info.svg\") center center / 100% no-repeat;\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/shared/frontend/components/shared/filter-component.vue","<script>\n\nimport { mapGetters, mapActions } from \"vuex\"\n\nexport default {\n  name: \"CsvComponent\",\n  created() {\n    this.resetCSVFilters()\n  },\n  data() {\n    return {\n    }\n  },\n  computed: {\n    ...mapGetters(\"csv\", [\"endpoint\", \"profilesForCSV\", \"fieldsForCSV\"]),\n    profileCSVEndpoint() {\n      const profiles = this.profilesForCSV.map((p) => `profile_ids[]=${p}`).join(\"&\")\n      const fields = this.fieldsForCSV.map((f) => `field_ids[]=${f}`).join(\"&\")\n      const query = `${this.endpoint}.csv?${profiles}&${fields}`\n      return query\n    }\n  },\n  methods: {\n    ...mapActions(\"csv\", [\"resetCSVFilters\"]),\n  },\n}\n</script>\n\n<template lang=\"pug\">\n  span.csv\n    a.csv-link(:href=\"profileCSVEndpoint\",\n      v-tooltip=\"'CSV will contain selected columns and filtered profiles only.'\") Export to CSV\n\n\n</template>\n\n<style>\n\n@import \"../../init/variables.css\";\n\n.csv {\n  padding-top: .7em;\n  & .csv-link {\n    margin-left: 5px;\n    color: var(--navColor);\n    &:hover {\n      color: var(--navColor);\n    }\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/shared/frontend/components/shared/csv-component.vue","<script>\n\nimport { mapGetters, mapActions } from \"vuex\"\n\nimport { find } from \"lodash-es\"\n\nexport default {\n  name: \"DropBox\",\n  props: {\n    phase: {\n      required: true\n    }\n  },\n  data() {\n    return {\n      beingDraggedOver: false\n    }\n  },\n  computed: {\n    ...mapGetters(\"boards\", [\"currentBoard\"])\n  },\n  methods: {\n    ...mapActions(\"boards\", [\"changePersonPhase\"]),\n    ...mapActions(\"application\", [\"markApplicationForDeletion\"]),\n    onDragOver(event) {\n      this.beingDraggedOver = true\n      event.dataTransfer.dropEffect = \"move\"\n    },\n    onDrop(event) {\n      this.beingDraggedOver = false\n      event.dataTransfer.dropEffect = \"move\"\n      const [personId, oldPhaseId] = event.dataTransfer.getData(\"text\")\n        .split(\",\")\n      if (oldPhaseId === this.phase.uuid) return false\n      const payload = {phaseId: this.phase.uuid, personId, oldPhaseId}\n      this.changePersonPhase(payload).then(() => {\n        const person = find(this.phase.persons, (p) => p.uuid === personId)\n        if (this.phase.has_callback) {\n          this.$emit(\"modal\", \"person-info\", { person, tab: \"email\"})\n        }\n        const params = {applicationId: person.application_id, accepted: this.phase.accepting}\n        return this.markApplicationForDeletion(params)\n      }).catch((err) => {\n        this.$emit(\"modal\", \"server-error\", {})\n      })\n    },\n  },\n}\n</script>\n\n<template lang=\"pug\">\n  div.drop-box(\n    :style=\"{'border-color': phase.color, 'color': phase.color}\",\n    v-tooltip=\"`Drop person here to close application`\",\n    @dragover.prevent=\"onDragOver\",\n    @dragend.prevent=\"beingDraggedOver = false\",\n    @dragleave.prevent=\"beingDraggedOver = false\",\n    @drop.prevent=\"onDrop\"\n    :class=\"{'--expanded': beingDraggedOver}\")\n    p {{phase.title}}\n\n</template>\n\n<style scoped>\n\n.drop-box {\n  border: 3px dashed;\n  display: flex;\n  background-color: white;\n  transition: .5s ease;\n  & p {\n    font-weight: bold;\n    margin: auto;\n    opacity: 1;\n  }\n  &.--expanded {\n    background-color: gray(80%);\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/board-sidebar/frontend/components/boards/board-sidebar/drop-box.vue","<script>\n\nimport { mapGetters, mapActions } from \"vuex\"\n\nimport DatesMixin from \"../../../mixins/dates-mixin\"\n\nexport default {\n  name: \"LoggedInUsers\",\n  mixins: [DatesMixin],\n  props: {\n  },\n  data() {\n    return {\n\n    }\n  },\n  computed: {\n    ...mapGetters(\"users\", [\"loggedInUsers\", \"loggedInMessages\"]),\n  },\n  methods: {\n    userInitials(user) {\n      return user.name[0] + user.lastname[0]\n    },\n    userTooltip(user) {\n      return `${user.name} ${user.lastname} (${user.email})`\n    }\n  },\n}\n</script>\n\n<template lang=\"pug\">\n  div.logged-in-users\n    p.logged-in-label Who else is logged in:\n      span(v-if=\"!loggedInUsers.length\") &nbsp; nobody\n    div.logged-in-circles\n      span.circle.user_initials(v-for=\"loggedUser in loggedInUsers\", v-tooltip=\"userTooltip(loggedUser)\") {{userInitials(loggedUser)}}\n    div.logged-in-actions\n      div(v-if=\"loggedInMessages.length\")\n        p.logged-in-message(v-for=\"message in loggedInMessages\") {{message.content}}\n          span.date {{formattedDateTime(message.timestamp)}}\n      div.no-actions(v-else)\n        p There is no recent activity from other administrators.\n\n</template>\n\n<style>\n\n@import \"../../../init/variables.css\";\n\n.logged-in-users {\n  padding: 0 5px;\n  display: flex;\n  flex-direction: column;\n\n  & .logged-in-label {\n    color: white;\n    font-size: .8em;\n    margin-right: 3px;\n  }\n\n  & .logged-in-circles {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n  & .circle {\n    margin: auto 3px;\n    width: 40px;\n    height: 40px;\n    padding: 3px;\n    background-color: #3e94e2;\n    color: white;\n    border: 3px solid white;\n  }\n  & .logged-in-actions {\n    width: 100%;\n    min-height: 50%;\n    max-height: 50%;\n    margin: 1em auto;\n    border-radius: 3px;\n    padding: 5px;\n    background-color: gray(90%);\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n    font-family: var(--textFamily);\n    color: var(--textColor);\n  }\n  & .no-actions {\n    text-align: center;\n  }\n  & .logged-in-message {\n    background-color: white;\n    font-size: .8em;\n    margin: 0;\n    margin-bottom: 4px;\n    padding: 3px;\n    border-left: 5px solid gray;\n    & .date {\n      margin-left: 4px;\n      color: gray(65%);\n      font-size: .9em;\n    }\n  }\n  & .logged-in-message:first-of-type {\n    border-left: 5px solid #34e0a0;\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/boards/board-sidebar/frontend/components/boards/board-sidebar/logged-in-users.vue","  <script>\nimport SceneMixin from \"mixins/scene-mixin.js\"\nimport ModalMixin from \"mixins/modal-mixin.js\"\nimport FilterMixin from \"mixins/filter-mixin.js\"\n\nimport { keyBy, pick, filter } from \"lodash-es\"\n\nimport { mapGetters, mapActions } from \"vuex\"\n\nimport AdminNav from \"components/shared/admin-nav.vue\"\nimport NamesTable from \"components/profiles/names-table.vue\"\nimport ProfilesTable from \"components/profiles/profiles-table.vue\"\nimport ProfilesSidebar from \"components/profiles/profiles-sidebar.vue\"\n\nimport NewProfileModal from \"components/profiles/modals/new-profile.vue\"\nimport ServerErrorModal from \"./boards/modals/server-error.vue\"\n\n  export default {\n    name: \"Profiles\",\n    mixins: [SceneMixin, ModalMixin, FilterMixin],\n    async created() {\n      try {\n        await this.fetchProfileFields()\n        await this.fetchProfiles()\n        await Promise.all([\n          this.getAllPositions(),\n          this.fetchSemesters({extended: true}),\n          this.fetchMonths({extended: true}),\n        ])\n        if (localStorage.getItem(\"profile-fields\")) {\n          this.selectedFields = JSON.parse(localStorage.getItem(\"profile-fields\"))\n        } else {\n          const dynamicFields = this.fields.map(f => f.id)\n          const staticFields = Object.keys(this.staticFields)\n          this.selectedFields = [...staticFields, ...dynamicFields]\n        }\n      } catch (err) {\n        this.openModal(\"server-error\", {})\n      }\n    },\n    data() {\n      return {\n        sidebarOpen: false,\n        selectedFields: [],\n      }\n    },\n    computed: {\n      ...mapGetters(\"profiles\", [, \"profiles\", \"fields\", \"profilesByStatus\"]),\n      staticFields() {\n        return {\n          status: \"Status\",\n          applied_at: \"Application sent on\",\n          closed_at: \"Application closed on\",\n          position_id: \"Position\",\n          email: \"Email\",\n          starting_date: \"Starting Date\",\n          ending_date: \"Ending Date\",\n        }\n      },\n      filteredProfiles() {\n        if (!this.profiles) return []\n        if (!this.filtering) return this.profiles\n        return filter(this.profiles, (p) => this.filteredProfileIds.includes(p.id))\n      },\n      filteredStaticFields() {\n        // make sure status always comes first\n        if (this.selectedFields.includes(\"status\") && this.selectedFields[0] !== \"status\") {\n          this.selectedFields.splice(this.selectedFields.indexOf(\"status\"), 1)\n          this.selectedFields = [\"status\", ...this.selectedFields]\n        }\n        return pick(this.staticFields, this.selectedFields)\n      },\n      filteredFields() {\n        return this.fields.filter(f => this.selectedFields.includes(f.id))\n      },\n      profilesTableMinHeight() {\n        const cellHeight = 55\n        return (this.profiles.length + 2) * cellHeight // Add the equivalent of 2 more cells for headers/padding.\n      }\n    },\n    methods: {\n      ...mapActions(\"profiles\", [\"fetchProfiles\", \"fetchProfileFields\"]),\n      ...mapActions(\"positions\", [\"getAllPositions\"]),\n      ...mapActions(\"dates\", [\"fetchSemesters\", \"fetchMonths\"]),\n      ...mapActions(\"csv\", [\"storeFilteredFieldsForCSV\"]),\n      getProfileStaticField(profile, attr) {\n        return {value: profile[attr], form: 'text'}\n      },\n      openModalByName(modalName, data={}) {\n        this.openModal(modalName)\n      },\n      signalFieldValidity(event, value) {\n        const cell = event.target.closest(\".cell\")\n        if (!cell) return\n        if (value) {\n          cell.classList.remove(\"--invalid\")\n        } else {\n          cell.classList.add(\"--invalid\")\n        }\n      },\n      toggleSidebarOpen(isOpen) {\n        this.sidebarOpen = isOpen\n      },\n      filterFields(filteredFieldIds) {\n        this.selectedFields = [...filteredFieldIds]\n        this.storeFilteredFieldsForCSV(this.selectedFields)\n      },\n    },\n    components: {\n      AdminNav,\n      NamesTable,\n      ProfilesTable,\n      ProfilesSidebar,\n      NewProfileModal,\n      ServerErrorModal\n    },\n    watch: {\n      selectedFields: function(val, oldVal) {\n        const fieldsToRemember = JSON.stringify(val)\n        localStorage.setItem(\"profile-fields\", fieldsToRemember)\n      }\n    }\n  }\n  </script>\n\n  <template lang=\"pug\">\n    div.profiles\n      server-error-modal(@close=\"closeModal\", v-if=\"modalVisible && modalName === 'server-error'\")\n      new-profile-modal(@close=\"closeModal\", v-if=\"modalVisible && modalName === 'new-profile'\", @error=\"openModalByName('server-error')\")\n\n      admin-nav.admin-nav(@filter=\"onFilterBySearch\")\n\n      div.tables\n        names-table(:displayed-profiles=\"filteredProfiles\",\n          @filter=\"onFilterByMenu\",\n          @selection=\"selectProfiles\",\n          @error=\"openModalByName('server-error')\", @valid=\"signalFieldValidity\")\n\n\n        profiles-table.dynamic-table(\n          :displayed-profiles=\"filteredProfiles\",\n          :selected-profile-ids=\"selectedProfileIds\",\n          :static-fields=\"filteredStaticFields\",\n          :fields=\"filteredFields\",\n          :num-selected-fields=\"selectedFields.length\",\n\n          @error=\"openModalByName('server-error')\", @valid=\"signalFieldValidity\",\n          :style=\"{minHeight: `${profilesTableMinHeight}px`}\")\n\n      profiles-sidebar.sidebar(@toggle=\"toggleSidebarOpen\",\n        :static-fields=\"staticFields\", :dynamic-fields=\"fields\",\n        :class=\"{'--open': sidebarOpen}\", @modal=\"openModalByName\", @filter=\"filterFields\")\n\n  </template>\n\n  <style>\n\n  @import \"../init/variables.css\";\n\n  :root {\n    --profilesTableOffset: calc(var(--cellWidth)*(2+var(--selectionBoxRatio)));\n  }\n\n  .profiles {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    height: 100%;\n\n\n    & .sidebar {\n      position: fixed;\n      right: calc(var(--profilesSidebarOffset)*-1)em;\n      height: 100%;\n      width: var(--profilesSidebarWidth)em;\n      transition: transform .5s;\n\n      &.--open {\n        transform: translateX(calc(var(--profilesSidebarOffset)*-1)em);\n      }\n    }\n\n    & .admin-nav, & .tables {\n      width: 96%;\n    }\n\n    & .profiles-table {\n      position: absolute;\n      left: var(--profilesTableOffset)em;\n      width: calc(100% - var(--profilesTableOffset)em);\n    }\n\n  }\n\n  </style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/frontend/components/profiles.vue","  <script>\n  import { mapGetters } from \"vuex\"\n\n  import { filter } from \"lodash-es\"\n\n  import FilterMixin from \"mixins/filter-mixin.js\"\n\n  import StaticField from \"components/profiles/static-field.vue\"\n\n  export default {\n    name: \"NamesTable\",\n    mixins: [FilterMixin],\n    props: {\n      displayedProfiles: { required: true }\n    },\n    data() {\n      return {\n        filterAction: null,\n        filterActions: [\n          {id: \"show_all\", label: \"Show all\"},\n          {id: \"show_selected\", label: \"Show selected\"},\n          {id: \"deselect_all\", label: \"Deselect all\"},\n        ],\n        nonFilterActions: [\"deselect_all\", \"show_all\"]\n      }\n    },\n    computed: {\n      ...mapGetters(\"profiles\", [, \"profiles\"]),\n      nameFields() {\n        return {\n          name: \"Name\",\n          lastname: \"Lastname\"\n        }\n      },\n      selectedProfileIdMap() {\n        const profileIdMap = {}\n        this.selectedProfileIds.forEach((id) => {\n          profileIdMap[id] = id\n        })\n        return profileIdMap\n      },\n      IsFiltering() {\n        return !this.filterAction || this.nonFilterActions.includes(this.filterAction)\n      }\n    },\n    methods: {\n      emitFilterAction() {\n        this.takeFilterAction()\n        this.$emit(\"filter\", this.filteredProfileIds, this.IsFiltering)\n      },\n      emitSelectedProfiles() {\n        this.$emit(\"selection\", this.selectedProfileIds)\n      },\n      emitValid(event, value) {\n        this.$emit(\"valid\", event, value)\n      },\n      takeFilterAction() {\n        if (!this.filterAction) return\n        if (this.filterAction === \"show_all\") {\n          this.filterProfiles(this.profiles.map((p) => p.id))\n        } else if (this.filterAction === \"show_selected\") {\n          this.filterProfiles(this.selectedProfileIds)\n        } else if (this.filterAction === \"deselect_all\") {\n          this.selectProfiles([])\n          this.emitSelectedProfiles()\n        }\n        this.filterAction = null\n      },\n      profileStatusLabel(profile) {\n        if (profile.status === \"rejected\") return \"Rejected\"\n        else if (profile.status === \"finished\") return \"Finished\"\n        else if (profile.status === \"incoming\") return \"Incoming\"\n        else return \"Currently active\"\n      }\n    },\n    components: {\n      StaticField,\n    },\n  }\n  </script>\n\n  <template lang=\"pug\">\n    div.table.names-table\n\n      div.table-head\n        div.row\n          div.cell.name-cell.selection-box\n            select(v-model=\"filterAction\", @change=\"emitFilterAction\")\n              option(:value=\"null\") -- Actions --\n              option(v-for=\"action in filterActions\", :value=\"action.id\") {{action.label}}\n          div.cell.name-cell(v-for=\"(label, key) in nameFields\") {{label}}\n\n      div.table-body\n        div.row.placeholder-row\n          div.cell.name-cell(v-for=\"(label, key) in nameFields\")\n        div.row(v-for=\"profile in displayedProfiles\", :class=\"{'--selected': selectedProfileIdMap[profile.id]}\")\n          div.cell.name-cell.selection-box\n            input(type=\"checkbox\", :value=\"profile.id\", v-model=\"selectedProfileIds\", @change=\"emitSelectedProfiles\")\n          div.cell.name-cell(v-for=\"(label, key) in nameFields\",\n            :class=\"{'--rejected': profile.status === 'rejected', '--finished': profile.status === 'finished', '--incoming': profile.status === 'incoming'}\",\n            v-tooltip=\"{content: profileStatusLabel(profile), delay: {show: 900}}\")\n            static-field(:profile=\"profile\", :field-name=\"key\", @error=\"emit('error')\", @valid=\"emitValid\")\n\n\n  </template>\n\n  <style scoped>\n\n  @import \"../../init/variables.css\";\n\n  .names-table {\n\n  }\n\n  </style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/profiles/frontend/components/profiles/names-table.vue","<script>\n\nimport { mapGetters, mapActions } from \"vuex\"\n\nimport CellText from \"components/profiles/cells/cell-text.vue\"\nimport CellMonth from \"components/profiles/cells/cell-month.vue\"\nimport CellSemester from \"components/profiles/cells/cell-semester.vue\"\nimport CellSelect from \"components/profiles/cells/cell-select.vue\"\n\nexport default {\n  name: \"StaticField\",\n  props: {\n    profile: {required: true},\n    fieldName: {required: true},\n  },\n  data() {\n    return {\n      fieldChoice: this.profile[this.fieldName],\n    }\n  },\n  computed: {\n    ...mapGetters(\"positions\", [\"allPositions\"]),\n    calculatedFieldData() {\n      const createdByHand = this.profile.applied_at === this.profile.closed_at\n      return {\n        name: {form: \"text\", optional: false, value: this.profile.name, fieldName: \"name\"},\n        lastname: {form: \"text\", optional: false, value: this.profile.lastname, fieldName: \"lastname\"},\n        position_id: {form: \"select\", optional: false, value: this.profile.position_id, fieldName: \"position_id\",\n          choices: this.allPositions.map(p => { p.label = p.title; return p })},\n        email: {form: \"text\", optional: false, value: this.profile.email, fieldName: \"email\"},\n        starting_date: {form: this.profile.starting_date_type, optional: false, fieldName: \"starting_date\",\n          value: this.profile.starting_date, starting_date_label: this.profile.starting_date_label},\n        ending_date: {form: this.profile.starting_date_type, optional: false, fieldName: \"ending_date\",\n          value: this.profile.ending_date, ending_date_label: this.profile.ending_date_label},\n        applied_at: {form: \"text\", optional: false, fieldName: \"applied_at\",\n          value: (createdByHand) ? \"--\" : this.profile.applied_at, editable: false},\n        closed_at: {form: \"text\", optional: false, fieldName: \"closed_at\",\n          value: (createdByHand) ? \"--\" : this.profile.closed_at, editable: false},\n        status: {form: \"text\", optional: false, fieldName: \"status\",\n          value: this.profile.status, editable: false}\n      }\n    },\n  },\n  methods: {\n    ...mapActions(\"profiles\", [\"updatePersonData\"]),\n    calculatedFieldDataFor(fieldName) {\n      return this.calculatedFieldData[fieldName]\n    },\n    emitValid(event, value) {\n      this.$emit(\"valid\", event, value)\n    }\n  },\n  components: {\n    CellText,\n    CellMonth,\n    CellSemester,\n    CellSelect,\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  span.static-field\n\n    component.field-cell(v-if=\"fieldName === 'starting_date'\", :is=\"`cell-${profile.starting_date_type}`\",\n      :profile=\"profile\", :field=\"calculatedFieldDataFor('starting_date')\", @error=\"$emit('error')\", @valid=\"emitValid\")\n    component.field-cell(v-else-if=\"fieldName === 'ending_date'\", :is=\"`cell-${profile.starting_date_type}`\",\n      :profile=\"profile\", :field=\"calculatedFieldDataFor('ending_date')\", @error=\"$emit('error')\", @valid=\"emitValid\")\n\n    component.field-cell(v-else, :is=\"`cell-${calculatedFieldDataFor(fieldName).form}`\",\n      :class=\"{'not-editable': calculatedFieldDataFor(fieldName).editable === false}\",\n      :profile=\"profile\", :field=\"calculatedFieldDataFor(fieldName)\", :editable=\"calculatedFieldDataFor(fieldName).editable\", @error=\"$emit('error')\", @valid=\"emitValid\")\n\n</template>\n\n<style>\n\n  @import \"../../init/variables.css\";\n\n  .static-field {\n    display: flex;\n    overflow-x: hidden;\n    overflow-y: auto;\n\n    & .field-cell {\n      min-height: var(--cellMinHeight)px;\n      margin: 0 auto;\n      text-align: center;\n      & .cell-display {\n        min-height: 1.5em;\n        min-width: var(--cellWidth)em;\n        display: inline-block;\n      }\n      & select, & input, & textarea {\n        min-width: 100%;\n        width: var(--cellWidth)em;\n      }\n    }\n    .not-editable {\n      color: color(var(--textColor) tint(50%));\n    }\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/profiles/frontend/components/profiles/static-field.vue","  <script>\n  import { mapGetters } from \"vuex\"\n\n  import StaticField from \"components/profiles/static-field.vue\"\n  import Field from \"components/profiles/field.vue\"\n\n  export default {\n    name: \"ProfilesTable\",\n    props: {\n      displayedProfiles: { required: true },\n      selectedProfileIds: { required: true },\n      staticFields: {required: true },\n      fields: { required: true },\n      numSelectedFields: { required: true }\n    },\n    data() {\n      return {\n\n      }\n    },\n    computed: {\n      selectedProfileIdMap() {\n        const profileIdMap = {}\n        this.selectedProfileIds.forEach((id) => {\n          profileIdMap[id] = id\n        })\n        return profileIdMap\n      },\n    },\n    methods: {\n      emitValid(event, value) {\n        this.$emit(\"valid\", event, value)\n      },\n      scrollHeaderSideways() {\n        const body = this.$el.querySelector(\".table-body\")\n        const head = this.$el.querySelector(\".table-head\")\n        const leftEdge = body.getBoundingClientRect().x\n        head.setAttribute(\"style\", `left: ${leftEdge}px;`)\n      }\n    },\n    components: {\n      StaticField,\n      Field,\n    },\n  }\n  </script>\n\n  <template lang=\"pug\">\n    div.table.profiles-table(@scroll=\"scrollHeaderSideways\")\n\n      div.table-head\n        div.row\n          div.cell(v-for=\"(label, key) in staticFields\")\n            div {{label}}\n          div.cell(v-for=\"field in fields\")\n            div {{field.label}}\n      div.table-body\n        div.row.placeholder-row\n          div.cell(v-for=\"n in numSelectedFields\")\n        div.row(v-for=\"profile in displayedProfiles\", :class=\"{'--selected': selectedProfileIdMap[profile.id]}\")\n          div.cell(v-for=\"(label, key) in staticFields\", :class=\"{'status-cell': (key === 'status'), '--rejected': profile.status === 'rejected', '--finished': profile.status === 'finished', '--incoming': profile.status === 'incoming'}\")\n            static-field(v-if=\"key === 'status'\", :profile=\"profile\", :field-name=\"'status'\")\n            static-field(v-else, :profile=\"profile\", :field-name=\"key\", @error=\"$emit('error')\", @valid=\"emitValid\")\n          div.cell(v-for=\"field in fields\")\n            field(:profile=\"profile\", :field=\"field\", @error=\"$emit('error')\", @valid=\"emitValid\")\n\n\n\n  </template>\n\n  <style>\n\n  @import \"../../init/variables.css\";\n\n  .profiles-table {\n\n  }\n\n  </style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/profiles/frontend/components/profiles/profiles-table.vue","<script>\n\nimport { mapGetters } from \"vuex\"\n\nimport CellText from \"components/profiles/cells/cell-text.vue\"\nimport CellTextarea from \"components/profiles/cells/cell-textarea.vue\"\nimport CellDate from \"components/profiles/cells/cell-date.vue\"\nimport CellRadio from \"components/profiles/cells/cell-radio.vue\"\nimport CellSelect from \"components/profiles/cells/cell-select.vue\"\nimport CellMonth from \"components/profiles/cells/cell-month.vue\"\nimport CellSemester from \"components/profiles/cells/cell-semester.vue\"\nimport CellCheckbox from \"components/profiles/cells/cell-checkbox.vue\"\n\nexport default {\n  name: \"Field\",\n  props: {\n    profile: {required: true},\n    field: {required: true},\n  },\n  data() {\n    return {\n    }\n  },\n  computed: {\n    ...mapGetters(\"profiles\", [\"profileFieldValuesByProfileId\"]),\n    profileFieldData() {\n      const data = this.profileFieldValuesByProfileId[this.profile.id][this.field.id]\n      return data ? data.value : null\n    },\n    fieldDataWithMetadata() {\n      const value = this.profileFieldValuesByProfileId[this.profile.id][this.field.id]\n      return { ...value, ...this.field, id: (value ? value.id : null), profile_field_id: this.field.id }\n    }\n  },\n  methods: {\n    emitValid(event, value) {\n      this.$emit(\"valid\", event, value)\n    }\n  },\n  components: {\n    CellText,\n    CellDate,\n    CellRadio,\n    CellSelect,\n    CellMonth,\n    CellSemester,\n    CellTextarea,\n    CellCheckbox,\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  span.field\n    component.field-cell(:is=\"`cell-${field.form}`\", :profile=\"profile\", :field=\"fieldDataWithMetadata\", @error=\"$emit('error')\", @valid=\"emitValid\")\n\n\n\n</template>\n\n<style>\n\n  @import \"../../init/variables.css\";\n\n  .field {\n    display: flex;\n    overflow-x: hidden;\n    overflow-y: auto;\n    & .field-cell {\n      min-height: var(--cellMinHeight)px;\n      min-width: var(--cellMinHeight)px;\n      margin: 0 auto;\n      text-align: center;\n\n      & .cell-display {\n        min-height: 1.5em;\n        min-width: var(--cellWidth)em;\n        display: inline-block;\n      }\n      & select, & input, & textarea {\n        min-width: 100%;\n        width: var(--cellWidth)em;\n      }\n\n      &.cell-textarea {\n        font-family: var(--textFamily);\n        font-size: .9em;\n        line-height: 1.3em;\n        display: inline-block;\n\n      }\n      &.--editing {\n        max-height: 100%;\n      }\n    }\n\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/profiles/frontend/components/profiles/field.vue","<script>\n\nimport CellFieldMixin from \"mixins/cell-field-mixin\"\n\nexport default {\n  name: \"CellTextarea\",\n  mixins: [CellFieldMixin],\n  data() {\n    return {\n      textValue: this.field.value,\n      popupLeft: 0,\n      popupTop: 0,\n    }\n  },\n  computed: {\n    isValid() {\n      if (!this.field.optional) {\n        return !!(this.textValue && this.textValue.length)\n      }\n      return true\n    },\n    displayValue() {\n      if (this.field.value) {\n        const truncated = `${this.field.value.substring(0, 40)}${this.field.value.length > 40 ? '...' : ''}`\n        return this.editing ? this.field.value : truncated\n      }\n    },\n  },\n  methods: {\n    setNewValue(event) {\n      this.closeEditing()\n      this.updateValue(event, this.textValue)\n    },\n    onEditing() {\n      if (this.editing) { this.editing = false}\n      else {\n        this.popupTop = this.getPopupTop()\n        this.popupLeft = this.getPopupLeft()\n        this.editing = true\n      }\n    },\n    getPopupLeft() {\n      return this.$el.getBoundingClientRect().left\n    },\n    getPopupTop() {\n      return this.$el.getBoundingClientRect().top\n    }\n  },\n}\n</script>\n\n<template lang=\"pug\">\n\n  span.cell-textarea\n    span.cell-display(v-if=\"!editing\", @dblclick=\"onEditing\") {{displayValue}}\n\n    div.textarea-popup(v-else, :style=\"{left: popupLeft + 'px', top: popupTop + 'px'}\")\n      textarea(v-model=\"textValue\", v-on-clickaway=\"closeEditing\", @blur=\"setNewValue($event)\", placeholder=\"'Write in some text...'\") {{textValue}}\n\n</template>\n\n<style>\n\n@import \"../../../init/variables.css\";\n\n.cell-textarea {\n  & .textarea-popup, .textarea-popup textarea {\n    min-width: var(--cellWidth)em;\n    min-height: calc(var(--cellMinHeight) * 3)px;\n    width: var(--cellWidth)em;\n    height: calc(var(--cellMinHeight) * 3)px;\n    border-radius: 5px;\n  }\n  & .textarea-popup {\n    position: fixed;\n  }\n  & .textarea-popup textarea {\n    background-color: white;\n    border: 2px solid var(--themeColor);\n    padding: 5px;\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/profiles/cells/frontend/components/profiles/cells/cell-textarea.vue","<script>\n\nimport CellFieldMixin from \"mixins/cell-field-mixin\"\n\nimport { compact } from \"lodash-es\"\n\n\nexport default {\n  name: \"CellCheckbox\",\n  mixins: [CellFieldMixin],\n  data() {\n    return {\n      fieldChoices: this.field.value || [],\n    }\n  },\n  computed: {\n    isValid() {\n      const choiceIds = this.field.choices.map(s => s.id)\n      const allInChoices = this.fieldChoices.every(fc =>  choiceIds.includes(fc))\n      const valuesEmpty = !(compact(this.fieldChoices).length)\n      if (this.field.optional) return valuesEmpty || allInChoices\n      else return !valuesEmpty && allInChoices\n    },\n  },\n  methods: {\n    displayValue(val) {\n      return this.choicesById &&\n        this.choicesById[val] &&\n        this.choicesById[val].label\n    }\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  span.cell-checkbox(:class=\"{'--editing': editing}\")\n    ul.cell-display(v-if=\"!editing\", @dblclick=\"editing = true\")\n      li.value(v-for=\"val in field.value\") {{displayValue(val)}}\n    select(v-else, multiple, v-model=\"fieldChoices\", @change=\"updateValue($event, fieldChoices)\", v-on-clickaway=\"closeEditing\")\n      option(:value=\"null\", v-if=\"field.optional\") --\n      option(v-for=\"choice in field.choices\", :value=\"choice.id\") {{choice.label}}\n\n</template>\n\n<style scoped>\n\n  @import \"../../../init/variables.css\";\n\n  .cell-checkbox {\n    &.--editing {\n      z-index: 100;\n      background-color: white;\n    }\n\n    & ul {\n      text-align: left;\n    }\n    & ul li {\n      &:before {\n        content: \"\\25E6 \";\n        color: var(--themeColor);\n      }\n    }\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/profiles/cells/frontend/components/profiles/cells/cell-checkbox.vue","<script>\n\nimport { mapGetters, mapActions } from \"vuex\"\n\nexport default {\n  name: \"ProfilesSidebar\",\n  props: {\n    staticFields: {\n      required: true, default: {}\n    },\n    dynamicFields: {\n      required: true, default: []\n    }\n  },\n  data() {\n    return {\n      sidebarOpen: false,\n      selectedFields: [],\n    }\n  },\n\n  methods: {\n    ...mapActions(\"csv\", [\"storeFilteredFieldsForCSV\"]),\n    toggleSidebarOpen() {\n      this.sidebarOpen = !this.sidebarOpen\n      this.$emit(\"toggle\", this.sidebarOpen)\n    },\n    toggleFieldVisibility(value) {\n      if (value === \"selectAll\") {\n        this.addAllColumns()\n      } else if (value === \"hideAll\") {\n        this.selectedFields = []\n      }\n    },\n    addRememberedColumns() {\n      if (localStorage.getItem(\"profile-fields\")) {\n        this.selectedFields = JSON.parse(localStorage.getItem(\"profile-fields\"))\n      } else {\n        this.addAllColumns()\n      }\n    },\n    addAllColumns() {\n      const dynamicFieldIds = this.dynamicFields.map(f => f.id)\n      const staticFieldIds = Object.keys(this.staticFields)\n      this.selectedFields = [...staticFieldIds, ...dynamicFieldIds]\n    },\n    applyFieldFilter() {\n      this.$emit(\"filter\", this.selectedFields)\n    }\n  },\n  components: {\n  },\n  watch: {\n    dynamicFields: function(val, oldVal) {\n      if (oldVal.length) return // Trigger only on transition from empty array to full\n      if (val.length) {\n        this.addRememberedColumns()\n        this.storeFilteredFieldsForCSV(this.selectedFields)\n      }\n    },\n  },\n}\n</script>\n\n\n\n<template lang=\"pug\">\n  aside.profiles-sidebar\n    div.menu-icons\n      button.toggle-menu(@click=\"toggleSidebarOpen\", :class=\"{'--open': sidebarOpen}\")\n    div.actions\n      button(type=\"button\", @click=\"$emit('modal', 'new-profile')\") Create new profile\n      div.visible-columns\n        div.column-line\n          button(type=\"button\", @click=\"toggleFieldVisibility('selectAll')\") Select all columns\n        div.column-line\n          button(type=\"button\", @click=\"toggleFieldVisibility('hideAll')\") Hide all columns\n        hr\n        div.field-columns\n          div.column-line(v-for=\"(label, key) in staticFields\")\n            input(type=\"checkbox\", :value=\"key\", v-model=\"selectedFields\")\n            label {{label}}\n\n          div.column-line(v-for=\"field in dynamicFields\")\n            input(type=\"checkbox\", :value=\"field.id\", v-model=\"selectedFields\")\n            label {{field.label}}\n        button.apply-filter-btn(type=\"button\", @click=\"applyFieldFilter\") Apply\n</template>\n\n<style>\n\n  @import \"../../init/variables.css\";\n\n  .profiles-sidebar {\n    background-color: var(--themeColor);\n    display: flex;\n\n    & .menu-icons {\n      width: 3em;\n      text-align: center;\n    }\n\n    & .actions {\n      width: var(--profilesSidebarOffset)em;\n      display: flex;\n      flex-direction: column;\n      margin: 3em auto;\n      padding: 1em;\n\n      & button {\n        padding: 0;\n        min-height: 3em;\n      }\n    }\n\n    & .visible-columns {\n      background-color: white;\n      padding: 1em;\n      margin-top: 1em;\n\n      & .field-columns {\n        height: 300px;\n        overflow-y: auto;\n      }\n      & .apply-filter-btn {\n        width: 100%;\n      }\n      & .column-line {\n        display: flex;\n        padding-bottom: 5px;\n        & input {\n          width: 15%;\n        }\n        & button {\n          padding: 2px;\n          color: var(--navColor);\n          background-color: white;\n          border: 2px solid var(--navColor);\n          text-transform: none;\n          letter-spacing: 1px;\n          min-width: 15em;\n        }\n      }\n    }\n\n    & .toggle-menu {\n      width: var(--menuSpace)em;\n      height: 3em;\n      background: url(\"../../static/icons/menu.svg\") center center no-repeat;\n      margin: 0;\n      padding: 0;\n      &.--open {\n        background: url(\"../../static/icons/x-charcoal.svg\") center center no-repeat;\n      }\n    }\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/profiles/frontend/components/profiles/profiles-sidebar.vue","<script>\n\nimport { mapGetters, mapActions } from \"vuex\"\n\nimport Modal from \"components/shared/modal.vue\"\n\nimport { values } from \"lodash-es\"\n\nexport default {\n  name: \"NewProfile\",\n  data() {\n    return {\n      newProfile: {\n        name: null, lastname: null, email: null,\n        position_id: null, starting_date: null\n      },\n      sent: false,\n    }\n  },\n  computed: {\n    ...mapGetters(\"positions\", [\"allPositions\", \"allPositionsById\"]),\n    ...mapGetters(\"dates\", [\"semesters\", \"months\"]),\n    dateCollection() {\n      const positionId = this.newProfile.position_id\n      if (!positionId) return []\n      else if (this.allPositionsById[positionId].time_interval === \"semester\") {\n        return this.semesters\n      } else if (this.allPositionsById[positionId].time_interval === \"month\") {\n        return this.months\n      } else return []\n    },\n    formIsValid() {\n      const noFieldIsNull = values(this.newProfile).every(val => (val !== null))\n      const noFieldEmpty = values(this.newProfile).filter(p => typeof p === \"string\").every(val => val.length)\n      const emailValid = !!(this.newProfile.email && this.newProfile.email.match(/\\w[\\w.-]+@[\\w.-]+\\.[\\w.-]+\\w$/))\n      const positionValid = this.allPositions.map(p => p.id).includes(this.newProfile.position_id)\n      const dateValid = this.dateCollection.map(d => d.id).includes(this.newProfile.starting_date)\n      return noFieldIsNull && noFieldEmpty && emailValid && positionValid && dateValid\n    },\n  },\n  methods: {\n    ...mapActions(\"profiles\", [\"createProfile\"]),\n    saveNewProfile() {\n      if (this.formIsValid) {\n        try {\n          this.loading = true\n          this.createProfile(this.newProfile).then(() => {\n            this.sent = true\n            this.loading = false\n          })\n        } catch(err) {\n          this.$emit(\"error\")\n        }\n      } else {\n        return\n      }\n    },\n  },\n  components: {\n    Modal,\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  modal(@close=\"$emit('close')\")\n    h1.new-profile-header(slot=\"header\")\n      span Create New Profile\n    div.new-profile(slot=\"body\")\n      div.msg-sent(v-if=\"sent\")\n        p The new profile has been created.\n      div(v-else)\n        span.form-line\n          label Name\n          input(type=\"text\", v-model=\"newProfile.name\")\n        span.form-line\n          label Lastname\n          input(type=\"text\", v-model=\"newProfile.lastname\")\n        span.form-line\n          label Email\n          input(type=\"text\", v-model=\"newProfile.email\")\n\n        span.form-line\n          label Position\n          select(v-model=\"newProfile.position_id\")\n            option(v-for=\"position in allPositions\", :value=\"position.id\") {{position.title}}\n\n        span.form-line\n          label Starting Date\n          select(v-model=\"newProfile.starting_date\", :disabled=\"!newProfile.position_id\")\n            option(v-for=\"date in dateCollection\", :value=\"date.id\") {{date.label}}\n\n        button.submit(type=\"button\", @click=\"saveNewProfile\", :class=\"{'--disabled': !formIsValid}\") Save\n\n</template>\n\n<style>\n\n  .new-profile {\n    padding: 10px;\n    padding-bottom: 20px;\n\n    & .msg-sent {\n      text-align: center;\n    }\n\n    & .form-line {\n      display: flex;\n      margin-bottom: 1em;\n\n      & label {\n        width: 20%;\n        text-align: right;\n        padding-right: 1em;\n      }\n      & input, select {\n        width: 70%;\n      }\n    }\n  }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/profiles/modals/frontend/components/profiles/modals/new-profile.vue","  <script>\nimport SceneMixin from \"mixins/scene-mixin.js\"\nimport ModalMixin from \"mixins/modal-mixin.js\"\nimport FilterMixin from \"mixins/filter-mixin.js\"\n\nimport { mapGetters, mapActions } from \"vuex\"\nimport { groupBy, filter } from \"lodash-es\"\n\nimport AdminNav from \"components/shared/admin-nav.vue\"\nimport NamesTable from \"components/timeline/names-table.vue\"\nimport TimelineTable from \"components/timeline/timeline-table.vue\"\n\nimport ServerErrorModal from \"./boards/modals/server-error.vue\"\nimport ProfileMilestonesModal from \"./timeline/modals/profile-milestones.vue\"\n\n  export default {\n    name: \"Timeline\",\n    mixins: [SceneMixin, ModalMixin, FilterMixin],\n    async created() {\n      try {\n        await this.fetchActiveProfileTimelineDates()\n        await Promise.all([\n          this.fetchMilestones(), this.fetchProfiles(),\n          this.getAllPositions(), this.fetchProfileFields(),\n          this.fetchMonths({extended: true}),\n          this.fetchSemesters({extended: true})\n        ])\n        await this.fetchPersonMilestones()\n      } catch (err) {\n        this.openModal(\"server-error\", {})\n      }\n    },\n    updated() {\n      const timelineTable = document.querySelector(\".timeline-table\")\n      const currentHeader = document.querySelector(\".cell.--current\")\n      if (timelineTable && currentHeader) {\n        timelineTable.scrollBy(-(timelineTable.scrollWidth), 0)\n        timelineTable.scrollBy(currentHeader.offsetLeft, 0)\n      }\n    },\n    data() {\n      return {\n        currentProfileInModal: null,\n        currentTabInModal: null,\n        errorType: null,\n        selectedFields: [],\n      }\n    },\n    computed: {\n      ...mapGetters(\"profiles\", [\"profiles\", \"timelineProfiles\"]),\n      ...mapGetters(\"milestones\", [\"milestonesById\", \"milestonesByPersonId\"]),\n      ...mapGetters(\"dates\", [\"timelineDates\"]),\n      filteredProfiles() {\n        if (!this.timelineProfiles) return []\n        if (!this.filteredProfileIds.length) return this.timelineProfiles\n        return filter(this.timelineProfiles, (p) => this.filteredProfileIds.includes(p.id))\n      },\n      timelineTableMinHeight() {\n        const cellMaxHeight = 55\n        const headerHeight = 122\n        return (this.timelineProfiles.length + 1) * cellMaxHeight + headerHeight\n      },\n    },\n    methods: {\n      ...mapActions(\"milestones\", [\"fetchMilestones\", \"fetchPersonMilestones\"]),\n      ...mapActions(\"profiles\", [\"fetchProfiles\", \"fetchProfileFields\"]),\n      ...mapActions(\"dates\", [\"fetchSemesters\", \"fetchMonths\", \"fetchActiveProfileTimelineDates\"]),\n      ...mapActions(\"positions\", [\"getAllPositions\"]),\n      openModalByName(modalName, data={}) {\n        if (modalName === \"profile-milestones\") {\n          this.currentProfileInModal = data.profile\n          this.currentTabInModal = data.tab\n        } else if (modalName === \"server-error\") {\n          this.errorType = data.errorType\n        }\n        this.openModal(modalName)\n      },\n      closeModal() {\n        this.modalVisible = false\n        this.modalName = null\n        if (this.currentProfileInModal) this.currentProfileInModal = null\n      },\n    },\n    components: {\n      ServerErrorModal,\n      AdminNav,\n      NamesTable,\n      TimelineTable,\n      ProfileMilestonesModal\n    }\n  }\n  </script>\n\n  <template lang=\"pug\">\n    div.timeline\n      server-error-modal(@close=\"closeModal\", v-if=\"modalVisible && modalName === 'server-error'\", :error-type=\"errorType\")\n      profile-milestones-modal(@close=\"closeModal\", v-if=\"modalVisible && modalName === 'profile-milestones'\", :profile=\"currentProfileInModal\", :tab=\"currentTabInModal\")\n\n      admin-nav(@filter=\"onFilterBySearch\")\n\n      div.tables\n        names-table(:displayed-profiles=\"filteredProfiles\",\n          @filter=\"onFilterByMenu\",\n          @selection=\"selectProfiles\",\n          @modal=\"openModalByName\",\n          @error=\"openModalByName('server-error')\")\n\n        timeline-table.dynamic-table(\n          :displayed-profiles=\"filteredProfiles\",\n          :selected-profile-ids=\"selectedProfileIds\",\n          :timeline-dates=\"timelineDates\",\n          @error=\"openModalByName\",\n          @modal=\"openModalByName\",\n          :style=\"{minHeight: `${timelineTableMinHeight}px`}\")\n\n  </template>\n\n  <style>\n\n  @import \"../init/variables.css\";\n\n  :root {\n    --timelineTableOffset: calc(var(--cellWidth)*(1+var(--selectionBoxRatio)));\n  }\n\n  .timeline {\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    height: 100%;\n\n    & .tables {\n      width: 100%;\n    }\n\n    & .timeline-table {\n      position: absolute;\n      left: var(--timelineTableOffset)em;\n      width: calc(100% - var(--timelineTableOffset)em);\n    }\n\n\n\n  }\n\n  </style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/frontend/components/timeline.vue","  <script>\n  import { mapGetters } from \"vuex\"\n\n  import { filter } from \"lodash-es\"\n\n  import FilterMixin from \"mixins/filter-mixin.js\"\n\n  import StaticField from \"components/profiles/static-field.vue\"\n\n  export default {\n    name: \"NamesTable\",\n    mixins: [FilterMixin],\n    props: {\n      displayedProfiles: { required: true }\n    },\n    data() {\n      return {\n        filterAction: null,\n        filterActions: [\n          {id: \"show_all\", label: \"Show all\"},\n          {id: \"show_selected\", label: \"Show selected\"},\n          {id: \"deselect_all\", label: \"Deselect all\"},\n        ],\n        nonFilterActions: [\"deselect_all\", \"show_all\"]\n      }\n    },\n    computed: {\n      ...mapGetters(\"profiles\", [, \"profiles\"]),\n      ...mapGetters(\"positions\", [\"allPositionsById\"]),\n      nameFields() {\n        return {\n          name: \"Name\",\n          lastname: \"Lastname\"\n        }\n      },\n      selectedProfileIdMap() {\n        const profileIdMap = {}\n        this.selectedProfileIds.forEach((id) => {\n          profileIdMap[id] = id\n        })\n        return profileIdMap\n      },\n      IsFiltering() {\n        return !this.filterAction || this.nonFilterActions.includes(this.filterAction)\n      },\n    },\n    methods: {\n      emitFilterAction() {\n        this.takeFilterAction()\n        this.$emit(\"filter\", this.filteredProfileIds, this.IsFiltering)\n      },\n      emitSelectedProfiles() {\n        this.$emit(\"selection\", this.selectedProfileIds)\n      },\n      emitModalByName(name, data) {\n        this.$emit(\"modal\", name, data)\n      },\n      takeFilterAction() {\n        if (!this.filterAction) return\n        if (this.filterAction === \"show_all\") {\n          this.filterProfiles(this.profiles.map((p) => p.id))\n        } else if (this.filterAction === \"show_selected\") {\n          this.filterProfiles(this.selectedProfileIds)\n        } else if (this.filterAction === \"deselect_all\") {\n          this.selectProfiles([])\n          this.emitSelectedProfiles()\n        }\n        this.filterAction = null\n      }\n    },\n    components: {\n      StaticField,\n    },\n  }\n  </script>\n\n  <template lang=\"pug\">\n    div.table.names-table\n\n      div.table-head\n        div.row\n          div.cell.name-cell.selection-box\n            select(v-model=\"filterAction\", @change=\"emitFilterAction\")\n              option(:value=\"null\") -- Actions --\n              option(v-for=\"action in filterActions\", :value=\"action.id\") {{action.label}}\n          div.cell.name-cell Name\n\n      div.table-body\n        div.row.placeholder-row\n          div.cell.name-cell\n        div.row(v-for=\"profile in displayedProfiles\", :class=\"{'--selected': selectedProfileIdMap[profile.id]}\")\n          div.cell.name-cell.selection-box\n            input(type=\"checkbox\", :value=\"profile.id\", v-model=\"selectedProfileIds\", @change=\"emitSelectedProfiles\")\n          div.cell.name-cell.full-name(\n            @click=\"emitModalByName('profile-milestones', { profile })\",\n            :class=\"{'--incoming': profile.status === 'incoming'}\")\n            div {{profile.full_name}}\n            div.person-position-label {{allPositionsById[profile.position_id].title}}\n\n\n  </template>\n\n  <style scoped>\n\n  @import \"../../init/variables.css\";\n\n  .names-table {\n    & .cell {\n      flex-direction: column;\n    }\n\n    & .full-name {\n      cursor: pointer;\n    }\n\n    & .person-position-label {\n      font-size: .8em;\n    }\n\n  }\n\n  </style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/timeline/frontend/components/timeline/names-table.vue","  <script>\n  import { mapGetters } from \"vuex\"\n\nimport MilestoneCell from \"components/timeline/milestone-cell.vue\"\n\n  export default {\n    name: \"TimelineTable\",\n    props: {\n      displayedProfiles: { required: true },\n      selectedProfileIds: { required: true },\n      timelineDates: { required: true },\n    },\n    data() {\n      return {\n\n      }\n    },\n    computed: {\n      ...mapGetters(\"milestones\", [\"milestonesBySemester\"]),\n      selectedProfileIdMap() {\n        const profileIdMap = {}\n        this.selectedProfileIds.forEach((id) => {\n          profileIdMap[id] = id\n        })\n        return profileIdMap\n      },\n      currentDate() {\n        const today = new Date\n        const month = `${today.getMonth() + 1}`.padStart(2, \"0\")\n        const date = `${today.getFullYear()}-${month}-01`\n        return date\n      },\n    },\n    methods: {\n      isCurrentSemester(semester) {\n        const dates = [semester.id, ...semester.months.map(m => m.id)]\n        return dates.includes(this.currentDate)\n      },\n      milestonesForSemester(profile, semester) {\n        if (!this.milestonesBySemester[profile.uuid]) return null\n        return this.milestonesBySemester[profile.uuid][semester.id]\n      },\n      scrollHeaderSideways() {\n        const body = this.$el.querySelector(\".table-body\")\n        const head = this.$el.querySelector(\".table-head\")\n        const leftEdge = body.getBoundingClientRect().x\n        head.setAttribute(\"style\", `left: ${leftEdge}px;`)\n      },\n      emitModalByName(name, data={}) {\n        this.$emit(\"modal\", name, data)\n      },\n      emitErrorModal(data) {\n        this.emitModalByName('server-error', data)\n      }\n    },\n    components: {\n      MilestoneCell\n    },\n  }\n  </script>\n\n  <template lang=\"pug\">\n    div.table.timeline-table(@scroll=\"scrollHeaderSideways\")\n\n      div.table-head\n        div.row\n          div.cell(v-for=\"date in timelineDates\", :class=\"{'--current': isCurrentSemester(date)}\")\n            div.date-label\n              div {{date.label}}\n              span.months-label {{date.months[0].label}} - {{date.months[date.months.length-1].label}}\n      div.table-body\n        div.row.placeholder-row\n          div.cell(v-for=\"date in timelineDates\")\n        div.row(v-for=\"profile in displayedProfiles\", :class=\"{'--selected': selectedProfileIdMap[profile.id]}\")\n          div.cell(v-for=\"date in timelineDates\", :class=\"{'--current': isCurrentSemester(date)}\")\n            milestone-cell(\n              :profile=\"profile\",\n              :person-milestones=\"milestonesForSemester(profile, date)\",\n              :date=\"date\",\n              @error=\"emitErrorModal\",\n              @modal=\"emitModalByName('profile-milestones', { profile, tab: 'milestones' })\")\n\n\n\n  </template>\n\n  <style>\n\n  @import \"../../init/variables.css\";\n\n  .timeline-table {\n\n    & .months-label {\n      font-size: .7em;\n    }\n\n  }\n\n  </style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/timeline/frontend/components/timeline/timeline-table.vue","<script>\nimport { mapGetters, mapActions } from \"vuex\"\n\nimport MilestoneCard from \"./milestone-card.vue\"\n\nexport default {\n  name: \"MilestoneCell\",\n  props: {\n    profile: { required: true },\n    date: { required: true },\n    personMilestones: { default: () => []  },\n  },\n  data() {\n    return {\n      beingDraggedOver: false,\n    }\n  },\n  computed: {\n    ...mapGetters(\"milestones\", [\"milestonesById\", \"milestonesByPersonId\"]),\n    dateIds() {\n      return [this.date.id, ...this.date.months.map(m => m.id)]\n    },\n    dateInPersonRange() {\n      const cellDate = new Date(`${this.date.id} EST`)\n\n      // Make starting and eding month equal to cell date if the date is in months, not semesters.\n\n      let startDateId = this.profile.starting_date\n      if (this.dateIds.includes(startDateId)) { startDateId = this.dateIds[0] }\n      const startDate = new Date(`${startDateId} EST`)\n\n      let endDateId = this.profile.ending_date\n      if (this.dateIds.includes(endDateId)) { endDateId = this.dateIds[0] }\n      const endDate = new Date(`${endDateId} EST`)\n\n      return (cellDate >= startDate && cellDate <= endDate)\n    }\n  },\n  methods: {\n    ...mapActions(\"milestones\", [\"updatePersonMilestone\"]),\n    onDragOver(event) {\n      this.beingDraggedOver = true\n      event.dataTransfer.dropEffect = \"move\"\n    },\n    onDrop(event) {\n      this.beingDraggedOver = false\n      event.dataTransfer.dropEffect = \"move\"\n      const [personMilestoneId, personId, oldDate] = event.dataTransfer.getData(\"text\")\n        .split(\",\")\n\n      if (personId !== this.profile.uuid) return false\n      if (oldDate === this.date.id) return false\n\n      const params = {\n        id: personMilestoneId,\n        date: this.date.id\n      }\n      this.updatePersonMilestone(params).then(() => {\n\n      }).catch((err) => {\n        if (err.response.data.error === \"Invalid date for milestone\") {\n          this.$emit(\"error\", {errorType: \"invalid_milestone_date\"})\n        } else this.$emit(\"error\")\n      })\n    },\n  },\n  components: {\n    MilestoneCard,\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.milestone-cell(\n    @dragover.prevent=\"onDragOver\",\n    @dragend.prevent=\"beingDraggedOver = false\",\n    @dragleave.prevent=\"beingDraggedOver = false\",\n    @drop.prevent=\"onDrop\",\n    :class=\"{'--highlighted': beingDraggedOver, '--in-range': dateInPersonRange}\")\n\n    ul.milestone-list(v-if=\"personMilestones.length\")\n      li.milestone(v-for=\"personMilestone in personMilestones\")\n        milestone-card(:person-milestone=\"personMilestone\", @modal=\"$emit('modal')\")\n\n</template>\n\n<style>\n\n@import \"../../init/variables.css\";\n\n.milestone-cell {\n  height: 100%;\n  width: 100%;\n\n  & .milestone-list {\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    height: 100%;\n    justify-content: space-evenly;\n  }\n  & .milestone {\n    width: 100%;\n    margin: 2px auto;\n  }\n  &.--highlighted {\n    background-color: color(var(--themeColor) alpha(20%));\n  }\n  &.--in-range {\n    background-color: color(yellow alpha(20%));\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/timeline/frontend/components/timeline/milestone-cell.vue","<script>\nimport { mapGetters, mapActions } from \"vuex\"\n\nexport default {\n  name: \"MilestoneCard\",\n  props: {\n    personMilestone: { required: true },\n  },\n  data() {\n    return {\n      beingDragged: false,\n    }\n  },\n  computed: {\n    ...mapGetters(\"milestones\", [\"milestonesById\", \"milestonesByPersonId\"]),\n  },\n  methods: {\n    onDragStart(event) {\n      this.beingDragged = true\n      event.dataTransfer.setData(\"text/plain\",\n        `${this.personMilestone.id},${this.personMilestone.person_id},${this.personMilestone.date}`)\n      event.dataTransfer.dropEffect = \"move\"\n    },\n    onDragEnd(event) {\n      this.beingDragged = false\n    }\n  },\n  components: {\n\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.milestone-card(\n    :draggable=\"true\", @click=\"$emit('modal')\",\n    @dragstart=\"onDragStart\", @dragend.prevent=\"onDragEnd\",\n    :class=\"{'--hidden': beingDragged}\") {{milestonesById[personMilestone.positions_milestone_id].title}}\n\n</template>\n\n<style>\n\n@import \"../../init/variables.css\";\n\n.milestone-card {\n  cursor: pointer;\n  padding: 3px;\n  border: 2px solid var(--themeColor);\n  border-radius: 3px;\n  background-color: #00a66855;\n  width: 100%;\n  &:before {\n    content: \"⁞ \";\n    color: gray;\n  }\n  &.--hidden {\n    opacity: .5;\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/timeline/frontend/components/timeline/milestone-card.vue","<script>\n\nimport { mapGetters, mapActions } from \"vuex\"\n\nimport Modal from \"components/shared/modal.vue\"\nimport Field from \"components/profiles/field.vue\"\nimport StaticField from \"components/profiles/static-field.vue\"\nimport MilestonesForm from \"./milestones-form.vue\"\nimport Graduate from \"./graduate.vue\"\n\nexport default {\n  name: \"ProfileMilestones\",\n  props: {\n    profile: { required: true },\n    tab: {},\n  },\n  data() {\n    return {\n      currentTab: null,\n      tabs: [\"information\", \"milestones\", \"graduate\"],\n    }\n  },\n  created() {\n    this.currentTab = (this.tab) ? this.tab : \"information\"\n  },\n  computed: {\n    ...mapGetters(\"milestones\", [\"milestonesByPosition\", \"milestonesByPersonId\"]),\n    ...mapGetters(\"dates\", [\"semesters\", \"months\"]),\n    ...mapGetters(\"positions\", [\"allPositionsById\"]),\n    ...mapGetters(\"profiles\", [\"fieldsById\", \"profileFieldValuesByProfileId\"]),\n    positionDates() {\n      const position = this.allPositionsById[this.profile.position_id]\n      if (position.time_interval === \"semester\") {\n        return this.semesters\n      } else if (position.time_interval === \"month\") {\n        return this.months\n      } else return []\n    },\n    staticFields() {\n      return {\n        name: \"Name\",\n        lastname: \"Lastname\",\n        position_id: \"Position\",\n        email: \"Email\",\n        starting_date: \"Starting Date\",\n        ending_date: \"Ending Date\"\n      }\n    },\n  },\n  components: {\n    Modal,\n    Field,\n    StaticField,\n    MilestonesForm,\n    Graduate\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  modal(@close=\"$emit('close')\")\n    h1.profile-milestones-header(slot=\"header\")\n      span {{profile.full_name}}\n    div.profile-milestones(slot=\"body\")\n\n      ul.nav-tabs\n        li.nav-tab(v-for=\"tab in tabs\", @click=\"currentTab = tab\", :class=\"{'--selected': currentTab === tab}\") {{tab | capitalize}}\n\n      div.tab-section.profile-info(v-if=\"currentTab === 'information'\")\n        ul\n          li.field-row(v-for=\"(label, key) in staticFields\", )\n            span.field-label {{label}}\n            static-field.field(:profile=\"profile\", :field-name=\"key\")\n\n          li.field-row(v-for=\"personField in profileFieldValuesByProfileId[profile.id]\", v-if=\"personField && personField.value\")\n            span.field-label {{fieldsById[personField.profile_field_id].label}} &nbsp;\n            field.field(:profile=\"profile\", :field=\"fieldsById[personField.profile_field_id]\")\n\n      div.tab-section.milestones(v-if=\"currentTab === 'milestones'\")\n        milestones-form(\n        :profile=\"profile\",\n        :person-milestones=\"milestonesByPersonId[profile.uuid]\",\n        :position-milestones=\"milestonesByPosition[profile.position_id]\",\n        :position-dates=\"positionDates\")\n\n      div.tab-section(v-if=\"currentTab === 'graduate'\")\n        graduate(:profile=\"profile\")\n\n</template>\n\n<style>\n\n  @import \"../../../init/variables.css\";\n\n  .profile-milestones {\n\n    & .nav-tabs {\n      padding: 0 1em;\n    }\n\n    & .tab-section {\n      padding: 1em;\n      height: 90%;\n      max-height: var(--windowHeight)px;\n      overflow-y: auto;\n    }\n\n    & .field-row {\n      display: flex;\n      flex-wrap: nowrap;\n      margin: .5em 0;\n      & .field-label {\n        width: 25%;\n        display: flex;\n        justify-content: center;\n        justify-content: flex-end;\n        padding: .5em;\n      }\n      & .field {\n        width: 50%;\n        & .field-cell {\n          text-align: left;\n        }\n      }\n    }\n\n  }\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/timeline/modals/frontend/components/timeline/modals/profile-milestones.vue","<script>\n\nimport { mapGetters, mapActions } from \"vuex\"\n\nimport { filter, keyBy } from \"lodash-es\"\n\nimport PersonMilestoneLine from \"./person-milestone-line\"\n\nexport default {\n  name: \"MilestonesForm\",\n  props: {\n    profile: { required: true },\n    personMilestones: { default: () => [] },\n    positionMilestones: { default: () => [] },\n    positionDates: { default: () => [] }\n  },\n  data() {\n    return {\n      newMilestoneDates: {},\n      formHasError: false\n    }\n  },\n  computed: {\n    ...mapGetters(\"milestones\", [\"milestonesById\"]),\n    personMilestonesByMilestoneId() {\n      return keyBy(this.personMilestones, \"positions_milestone_id\")\n    },\n    positionMilestonesLeftToAdd() {\n      return filter(this.positionMilestones, (pm) => {\n        return !this.personMilestonesByMilestoneId[pm.id]\n      })\n    }\n  },\n  methods: {\n    ...mapActions(\"milestones\", [\"createPersonMilestone\", \"updatePersonMilestone\", \"destroyPersonMilestone\"]),\n    createNewPersonMilestone(milestone) {\n      const params = {\n        person_id: this.profile.id,\n        positions_milestone_id: milestone.id,\n        date: this.newMilestoneDates[milestone.id]\n      }\n      this.createPersonMilestone(params)\n        .then(() => {\n          this.formHasError = false\n        })\n        .catch((err) => {\n          this.formHasError = true\n        })\n    },\n    setFormError(value) {\n      this.formHasError = value\n    }\n    // savePersonMilestone(personMilestone) {\n    //   const params = {\n    //     id: personMilestone.id,\n    //     date: personMilestone.date\n    //   }\n    //   this.updatePersonMilestone(params)\n    //     .then(() => {\n    //       this.formHasError = false\n    //     })\n    //     .catch((err) => {\n    //       this.formHasError = true\n    //     })\n    // },\n    // async deletePersonMilestone(personMilestone) {\n    //   await this.destroyPersonMilestone(personMilestone.id)\n    // }\n  },\n  components: {\n    PersonMilestoneLine\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.milestones-form\n\n    div.error-msg(v-if=\"formHasError\")\n      p One or more of the milestone dates you have chosen is invalid.\n      p Please be sure that the dates are within the range of the person's Starting and Ending dates.\n\n    div(v-if=\"positionMilestones.length\")\n      ul\n        li.field-row(v-for=\"personMilestone in personMilestones\")\n          person-milestone-line(:person-milestone=\"personMilestone\", :position-dates=\"positionDates\",\n            @valid=\"setFormError\")\n          //- label {{milestonesById[personMilestone.positions_milestone_id].title}}\n          //- select(v-model=\"personMilestone.date\", @change=\"savePersonMilestone(personMilestone)\")\n          //-   option(v-for=\"date in positionDates\", :value=\"date.id\") {{date.label}}\n          //- button.delete(type=\"button\", @click=\"deletePersonMilestone(personMilestone)\")\n\n      div(v-if=\"positionMilestonesLeftToAdd.length\")\n        h2 Milestones to add\n        ul\n          li.field-row(v-for=\"milestone in positionMilestonesLeftToAdd\")\n            label {{milestonesById[milestone.id].title}}\n            select(v-model=\"newMilestoneDates[milestone.id]\")\n              option(:value=\"null\") Assign automatically\n              hr\n              option(v-for=\"date in positionDates\", :value=\"date.id\") {{date.label}}\n            button.save(type=\"button\", @click=\"createNewPersonMilestone(milestone)\")\n\n    div(v-else)\n      p There are no milestones for this person's position\n\n</template>\n\n<style>\n\n  @import \"../../../init/variables.css\";\n\n  .milestones-form {\n    display: flex;\n    flex-direction: column;\n\n    & .error-msg {\n      color: red;\n      text-align: center;\n      font-size: .9em;\n    }\n\n    & .field-row {\n      & label {\n        width: 30%;\n        padding-top: 1em;\n      }\n      & select { width: 50%; }\n      & button {\n        width: 5%;\n      }\n      & button.save {\n        &:after {\n          content: \"✓\";\n          font-size: .9em;\n        }\n      }\n      & button.delete {\n        background-color: red;\n        border: 2px solid red;\n        &:after {\n          content: \"x\";\n          font-size: .9em;\n        }\n        &:hover {\n          background-color: white;\n          color: red;\n        }\n      }\n    }\n  }\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/timeline/modals/frontend/components/timeline/modals/milestones-form.vue","<script>\n\nimport { mapGetters, mapActions } from \"vuex\"\n\nexport default {\n  name: \"PersonMilestoneLine\",\n  props: {\n    personMilestone: { required: true },\n    positionDates: { default: () => [] }\n  },\n  data() {\n    return {\n      commentOpen: false\n    }\n  },\n  computed: {\n    ...mapGetters(\"milestones\", [\"milestonesById\"]),\n  },\n  methods: {\n    ...mapActions(\"milestones\", [\"updatePersonMilestone\", \"destroyPersonMilestone\"]),\n    savePersonMilestone() {\n      const params = {\n        id: this.personMilestone.id,\n        date: this.personMilestone.date,\n        comment: this.personMilestone.comment\n      }\n      this.updatePersonMilestone(params)\n        .then(() => {\n          this.$emit(\"valid\", false)\n        })\n        .catch((err) => {\n          this.$emit(\"valid\", true)\n        })\n    },\n    async deletePersonMilestone() {\n      await this.destroyPersonMilestone(this.personMilestone.id)\n    }\n  }\n}\n</script>\n\n<template lang=\"pug\">\n  div.person-milestone-line\n    label {{milestonesById[personMilestone.positions_milestone_id].title}}\n    select(v-model=\"personMilestone.date\", @change=\"savePersonMilestone\")\n      option(v-for=\"date in positionDates\", :value=\"date.id\") {{date.label}}\n    button.delete(type=\"button\", @click=\"deletePersonMilestone\")\n    button.comment(type=\"button\", @click=\"commentOpen = !commentOpen\") {{(commentOpen) ? 'close' : 'comment'}}\n    div.comment-text(v-if=\"commentOpen\")\n      textarea(v-model=\"personMilestone.comment\")\n      button(type=\"button\", @click=\"savePersonMilestone\") save\n\n</template>\n\n<style>\n\n  @import \"../../../init/variables.css\";\n\n  .person-milestone-line {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n\n    & .comment-text {\n      width: 100%;\n      display: flex;\n      flex-direction: column;\n      & textarea {\n        width: 90%;\n        margin: .7em auto;\n        border: 2px solid gray;\n        height: 5em;\n        overflow-y: auto;\n      }\n      button {\n        width: 50%;\n        margin: auto;\n        border: 1px solid transparent;\n        &:hover {\n          border: 1px solid;\n        }\n      }\n    }\n\n    & button.comment {\n      width: 93px;\n      text-transform: none;\n      font-size: .8em;\n      padding: 10px;\n    }\n  }\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/timeline/modals/frontend/components/timeline/modals/person-milestone-line.vue","<script>\n\nimport { mapActions } from \"vuex\"\n\nexport default {\n  name: \"Graduate\",\n  props: {\n    profile: { required: true },\n  },\n  data() {\n    return {\n      isGraduated: false\n    }\n  },\n  methods: {\n    ...mapActions(\"profiles\", [\"markProfileAsFinished\"]),\n    async markAsFinished() {\n      await this.markProfileAsFinished(this.profile.uuid).then(() => {\n        this.isGraduated = true\n      })\n    }\n  },\n}\n</script>\n\n<template lang=\"pug\">\n  div.graduate\n    button.caution.graduate-flex-item(@click=\"markAsFinished\", :disabled=\"isGraduated\", :class=\"{'--disabled': isGraduated}\") Mark as finished\n    div.graduate-text.graduate-flex-item(v-if=\"!isGraduated\")\n      h1.attention Attention:\n      p Please be sure you wish to mark this individual as finished. This action cannot be undone.\n      p Make sure this person has no pending milestones.\n    p.graduate-text.graduate-flex-item(v-else) This individual has been marked as graduated.\n\n</template>\n\n<style>\n\n  @import \"../../../init/variables.css\";\n\n  .graduate {\n    display: flex;\n    width: 100%;\n    height: 200px;\n    margin-top: 2em;\n    flex-wrap: wrap;\n    justify-content: center;\n\n    & .graduate-flex-item {\n      width: 60%;\n    }\n\n    & .graduate-text {\n      margin-top: 1.5em;\n      text-align: center;\n      font-size: .9em;\n      & h1 {\n        font-size: 1.7em;\n      }\n    }\n\n  }\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./frontend/components/timeline/modals/frontend/components/timeline/modals/graduate.vue"],"mappings":";;AAGA;ACAA;;;AAKA;AAGA;AACA;AACA;AAGA;;AAIA;AAGA;AACA;;;AAKA;AAGA;AACA;AACA;AAGA;;;AAKA;AAGA;AACA;AACA;AACA;;;AAKA;AAGA;AACA;AACA;AAGA;;AAIA;AAGA;AACA;;;AAKA;AAGA;AACA;AACA;AAAA;AACA;;AAIA;;AAIA;AACA;;;AAKA;;;AAKA;AACA;AACA;;AAIA;AAGA;AACA;;;AAKA;;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AAGA;;AAIA;AAGA;AACA;AAGA;;;AAKA;;;;;AAOA;AACA;AACA;AACA;AACA;;;AAKA;AAGA;AACA;AACA;;;AAKA;AAGA;AACA;AACA;;AAIA;;;;AAMA;AACA;;AAIA;;;;AAMA;AACA;AACA;;AAIA;;;;AAMA;AACA;;AAIA;AAGA;AACA;;;;;AAOA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AAGA;AACA;;AAIA;AAGA;AACA;;;AAKA;;AAIA;AACA;AACA;;AAIA;;AAIA;AACA;;;AAKA;AAGA;AACA;AACA;;AAIA;AAGA;AACA;;;AAKA;AAGA;AACA;AACA;AAGA;;AAIA;AAGA;AACA;;AAIA;AAGA;AACA;AAGA;;AAIA;AAGA;AACA;;AAIA;AAGA;AACA;ACnjMA;AACA;AACA;AAYA;AAWA;AACA;ACxBA;AACA;AACA;AACA;AACA;AAcA;AACA;AAfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;ADlBA;AACA;AACA;AAYA;AAWA;AACA;AEdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAUA;AACA;AAVA;AACA;AAOA;AACA;AAPA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA+BA;AACA;AA7BA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAaA;AACA;AAbA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAWA;AACA;AAXA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAJA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAmBA;AACA;AAlBA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AASA;AACA;AATA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;ACtIA;AACA;AACA;AA4FA;AACA;AA3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AAXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAYA;AACA;AAXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAYA;AACA;AAXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAYA;AACA;AAXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AH7FA;AACA;AACA;AAYA;AAWA;AIqKA;AACA;AACA;AACA;AACA;AAeA;AAbA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AALA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAsDA;AApDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AAZA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAiBA;AAfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AASA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AAeA;AAdA;AACA;AAMA;AALA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAHA;AACA;AACA;AAGA;AACA;AACA;ACjTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAoBA;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgCA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;ACEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AR9FA;AACA;AACA;AAYA;AAWA;ASNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACiBA;AACA;AASA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AASA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AXvCA;AACA;AACA;AAYA;AAWA;AYuBA;AACA;AACA;AACA;AACA;AAWA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AZhEA;AACA;AACA;AAYA;AAWA;AagBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqDA;AAnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AbtGA;AACA;AACA;AAYA;AAWA;AcuBA;AACA;AACA;AACA;AACA;AAYA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AdjEA;AACA;AACA;AAYA;AAWA;AeuEA;AACA;AAIA;AAHA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AA8DA;AA5DA;AACA;AACA;AACA;AACA;AAsCA;AApCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAHA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAUA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;Af3LA;AACA;AACA;AAYA;AAWA;AgBHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AjBlIA;AACA;AACA;AAYA;AAWA;AkBqGA;AACA;AACA;AACA;AACA;AACA;AAwCA;AAtCA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAHA;AACA;AACA;AAEA;AACA;AACA;AACA;AAeA;AAbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpGA;AACA;AACA;;AC4BA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;ApB9GA;AACA;AACA;AAYA;AAWA;AqB0CA;AACA;AACA;AA4BA;AA1BA;AACA;AACA;AACA;AAEA;AACA;AAeA;AAdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;ArBjGA;AACA;AACA;AAYA;AAWA;AsB+EA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAHA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAHA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AAHA;AACA;AACA;AACA;;AtBvKA;AACA;AACA;AAYA;AAWA;AuBmEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAQA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AvBnIA;AACA;AACA;AAYA;AAWA;AwB8JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAHA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAqBA;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAHA;AACA;AACA;AAEA;AACA;AAIA;AAHA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AANA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AxBnRA;AACA;AACA;AAYA;AAWA;AyB2HA;AACA;AAiFA;AA/EA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAHA;AACA;AACA;AAEA;AACA;AAIA;AAHA;AACA;AACA;AAEA;AACA;AAIA;AAHA;AACA;AACA;AAEA;AACA;AAIA;AAHA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAYA;AAXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AzBrOA;AACA;AACA;AAYA;AAWA;A0B2CA;AACA;AACA;AACA;AA+CA;AA9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqBA;AApBA;AACA;AACA;AACA;AACA;AACA;AASA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AChFA;AAEA;AACA;;A7BrCA;ACAA;;;AAKA;AAEA;AACA;AACA;AACA;AAGA;;AAIA;AAEA;AACA;AACA;;;AAKA;AAEA;AACA;AACA;AACA;AAGA;;;AAKA;AAEA;AACA;AACA;AACA;AACA;;;AAKA;AAEA;AACA;AACA;AACA;AAGA;;AAIA;AAEA;AACA;AACA;;;AAKA;AAEA;AACA;AACA;AACA;AAAA;AACA;;AAIA;AAEA;;AAEA;AACA;;;AAKA;AAEA;;;AAGA;AACA;AACA;;AAIA;AAEA;AACA;AACA;;;AAKA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;;AAIA;AAEA;AACA;AACA;AAGA;;;AAKA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;;;AAKA;AAEA;AACA;AACA;AACA;;;AAKA;AAEA;AACA;AACA;AACA;;AAIA;AAEA;;;;AAIA;AACA;;AAIA;AAEA;;;;AAIA;AACA;AACA;;AAIA;AAEA;;;;AAIA;AACA;;AAIA;AAEA;AACA;AACA;;;;;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AAEA;AACA;AACA;;AAIA;AAEA;AACA;AACA;;;AAKA;AAEA;;AAEA;AACA;AACA;;AAIA;AAEA;;AAEA;AACA;;;AAKA;AAEA;AACA;AACA;AACA;;AAIA;AAEA;AACA;AACA;;;AAKA;AAEA;AACA;AACA;AACA;AAGA;;AAIA;AAEA;AACA;AACA;;AAIA;AAEA;AACA;AACA;AAGA;;AAIA;AAEA;AACA;AACA;;AAIA;AAEA;AACA;AACA;ACpVA;AACA;AACA;AAYA;AAWA;AFpBA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAOA;AANA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA6DA;AA3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAWA;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAeA;AAdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AALA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAWA;AAVA;AACA;AACA;AACA;AACA;AACA;AAIA;AAHA;AACA;AACA;AAIA;AACA;AACA;AAKA;AAJA;AACA;AACA;AACA;A8BvJA;AACA;AACA;AACA;AACA;AAYA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A5B3DA;AACA;AACA;AAYA;AAWA;A6BuEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA+DA;AA7DA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAJA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAaA;AAZA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAJA;AACA;AAAA;AACA;AAAA;AACA;AACA;;A7BrKA;AACA;AACA;AAYA;AAWA;A8B4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAuCA;AArCA;AACA;AA+BA;AA7BA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;;A9BpGA;AACA;AACA;AAYA;AAWA;A+BgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA+DA;AA9DA;AACA;AACA;AACA;AACA;AAwBA;AAvBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAaA;AAZA;AACA;AACA;AAIA;AAHA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A/B/HA;AACA;AACA;AAYA;AAWA;AgC4CA;AACA;AACA;AACA;AACA;AACA;AA2BA;AAxBA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AAJA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AhCrGA;AACA;AACA;AAYA;AAWA;AiCsDA;AACA;AACA;AACA;AAIA;AAHA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AjChGA;AACA;AACA;AAYA;AAWA;AkCeA;AACA;AAQA;AAPA;AACA;AACA;AAIA;AAHA;AACA;AACA;AACA;;ACiBA;AACA;AACA;AACA;AACA;AASA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AnC9EA;AACA;AACA;AAYA;AAWA;AoCwBA;AACA;AACA;AACA;AAuDA;AArDA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AALA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;ApC3GA;AACA;AACA;AAYA;AAWA;AqC0IA;AACA;AACA;AACA;AACA;AAyBA;AAtBA;AACA;AACA;AACA;AACA;AACA;AAKA;AAHA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;ArC/LA;AACA;AACA;AAYA;AAWA;AsCqFA;AAEA;AACA;;AtCjHA;AACA;AACA;AAYA;AAWA;AuCsDA;AACA;AACA;AACA;AAmBA;AAjBA;AACA;AACA;AACA;AAUA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AvCrGA;AACA;AACA;AAYA;AAWA;AwCiDA;AAEA;AACA;;AxC7EA;AACA;AACA;AAYA;AAWA;AyCuCA;AACA;AACA;AACA;AA6BA;AA5BA;AACA;AACA;AACA;AACA;AAsBA;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AzC9FA;AACA;AACA;AAYA;AAWA;A0CyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A1CjFA;AACA;AACA;AAYA;AAWA;A2CwBA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;A3C9DA;AACA;AACA;AAYA;AAWA;A4CoEA;AACA;AACA;AA4DA;AA1DA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAMA;AAJA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAyBA;AAvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AAZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAIA;AAHA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AAmBA;AAjBA;AACA;AACA;AAEA;AACA;AACA;AAUA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A7CtHA;AACA;AACA;AAYA;AAWA;A8CoGA;AACA;AACA;AACA;AACA;AAcA;AAZA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;A9C5IA;AACA;AACA;AAYA;AAWA;A+CkFA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;A/CtHA;AACA;AACA;AAYA;AAWA;AgDmEA;AACA;AACA;AACA;;AhD/FA;AACA;AACA;AAYA;AAWA;AiDiEA;AACA;AACA;AAmBA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AjD/GA;AACA;AACA;AAYA;AAWA;AkDoBA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AlD3DA;AACA;AACA;AAYA;AAWA;AmDuEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAcA;AAbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAHA;AACA;AACA;AACA;AACA;;AnD5HA;AACA;AACA;AAYA;AAWA;AoDuFA;AACA;AACA;AAoCA;AAlCA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AASA;AARA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ApDrJA;AACA;AACA;AAYA;AAWA;AqDiCA;AACA;AACA;AACA;AA6BA;AA3BA;AACA;AACA;AACA;AAgBA;AAfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAHA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ArD3FA;AACA;AACA;AAYA;AAWA;AsDeA;AACA;AACA;AACA;AACA;AACA;AACA;AAeA;AAbA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAHA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;","sourceRoot":""}